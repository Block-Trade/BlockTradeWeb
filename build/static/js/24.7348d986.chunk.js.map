{"version":3,"sources":["app/components/mywallet/Wallet.js","app/components/mywallet/token.png"],"names":["useStyles","makeStyles","theme","root","minWidth","backgroundColor","borderRadius","maxWidth","textAlign","margin","bullet","display","transform","title","fontSize","marginTop","pos","marginBottom","connect","state","conn","auth","loadUser","getAllConn","classes","useState","isOpen","value","setState","selected","setSelected","amt","setAmt","balance","setBalance","useEffect","user","main_contract","fetchData","a","methods","balanceOf","current_account","call","bal","console","log","toggleModal","buyTokens","etherAmount","window","web3","utils","toWei","send","from","on","hash","sellTokens","tokenAmount","sellToken","toggleModalClose","className","style","raised","color","gutterBottom","left","variant","component","alt","src","require","justifyContent","fullWidth","onClick","e","preventDefault","size","show","onClose","aria-labelledby","centered","Header","alignItems","Title","id","Body","Group","Control","type","placeholder","onChange","target","Footer","module","exports"],"mappings":"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","file":"static/js/24.7348d986.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport { connect } from 'react-redux';\r\nimport { getAllConn } from '../../actions/connection';\r\nimport { loadUser } from '../../actions/auth';\r\nimport { Modal } from 'react-bootstrap';\r\nimport { Form } from 'react-bootstrap';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    minWidth: 275,\r\n    backgroundColor: '#2d5fc3',\r\n    borderRadius: '30px',\r\n    maxWidth: 1000,\r\n    textAlign: 'center',\r\n    margin: '0 auto',\r\n  },\r\n  bullet: {\r\n    display: 'inline-block',\r\n    margin: '0 2px',\r\n    transform: 'scale(0.8)',\r\n  },\r\n  title: {\r\n    fontSize: 30,\r\n    marginTop: '3rem',\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n}));\r\n\r\nconst Wallet = ({ conn, loadUser, getAllConn, auth }) => {\r\n  const classes = useStyles();\r\n  const [state, setState] = useState({\r\n    isOpen: false,\r\n    value: 'defaultvalue',\r\n  });\r\n  const [selected, setSelected] = useState('');\r\n  const [amt, setAmt] = useState();\r\n  const [balance, setBalance] = useState();\r\n\r\n  useEffect(() => {\r\n    loadUser();\r\n  }, []);\r\n  useEffect(() => {\r\n    if (auth.user) {\r\n      getAllConn();\r\n    }\r\n  }, [auth.user]);\r\n  useEffect(() => {\r\n    if (conn.main_contract) {\r\n      fetchData();\r\n    }\r\n  }, [conn.main_contract]);\r\n\r\n  const fetchData = async () => {\r\n    //e.preventDefault();\r\n    var bal = await conn.main_contract.methods\r\n      .balanceOf(conn.current_account)\r\n      .call();\r\n    setBalance(bal);\r\n    console.log(balance);\r\n  };\r\n  const toggleModal = () => {\r\n    setState({\r\n      isOpen: !state.isOpen,\r\n    });\r\n  };\r\n\r\n  const buyTokens = async (etherAmount) => {\r\n    etherAmount = window.web3.utils.toWei(etherAmount, 'Ether');\r\n    conn.main_contract.methods\r\n      .buyTokens()\r\n      .send({ value: etherAmount, from: conn.current_account })\r\n      .on('transactionHash', (hash) => {\r\n        console.log('BuyTokens');\r\n      });\r\n\r\n    setSelected('');\r\n    setAmt(0);\r\n  };\r\n\r\n  const sellTokens = async (tokenAmount) => {\r\n      tokenAmount = tokenAmount / 100;\r\n      tokenAmount = window.web3.utils.toWei(tokenAmount, 'Ether')\r\n    conn.main_contract.methods\r\n      .sellToken(tokenAmount)\r\n      .send({ from: conn.current_account })\r\n      .on('transactionHash', (hash) => {\r\n        console.log('sellTokens');\r\n      });\r\n\r\n    setSelected('');\r\n    setAmt(0);\r\n  };\r\n\r\n  const toggleModalClose = () => {\r\n    setState({\r\n      isOpen: false,\r\n      value: 'defaultvalue',\r\n    });\r\n  };\r\n  return (\r\n    <div className={classes.root} style={{ marginTop: '10rem' }}>\r\n      <Card className={classes.root} raised>\r\n        <CardContent>\r\n          <Typography\r\n            className={classes.title}\r\n            color='textSecondary'\r\n            gutterBottom\r\n            style={{\r\n              textAlign: 'center',\r\n              color: '#ffffff',\r\n            }}\r\n          >\r\n            {conn.current_account}\r\n          </Typography>\r\n          <div\r\n            style={{\r\n              margin: '0 auto',\r\n              left: '50%',\r\n            }}\r\n          >\r\n            <Typography\r\n              variant='h5'\r\n              component='h2'\r\n              style={{\r\n                display: 'inline-block',\r\n                color: '#ffffff',\r\n                margin: '0 auto',\r\n                marginTop: '3rem',\r\n              }}\r\n            >\r\n              {balance}\r\n            </Typography>\r\n            <img\r\n              alt='bt token'\r\n              src={require('./token.png')}\r\n              style={{\r\n                maxWidth: '2rem',\r\n                maxWidth: '2rem',\r\n                marginLeft: '1rem',\r\n                display: 'inline-block',\r\n              }}\r\n            />\r\n          </div>\r\n          <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n            <Button\r\n              variant='outlined'\r\n              style={{\r\n                backgroundColor: 'white',\r\n                maxWidth: '10rem',\r\n                marginBottom: '2rem',\r\n                marginTop: '3rem',\r\n                textAlign: 'center',\r\n              }}\r\n              fullWidth\r\n              onClick={(e) => {\r\n                e.preventDefault();\r\n                setSelected('Buy');\r\n                toggleModal();\r\n              }}\r\n            >\r\n              Buy\r\n            </Button>\r\n            <br />\r\n          </div>\r\n          <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n            <Button\r\n              variant='outlined'\r\n              style={{ backgroundColor: 'white', maxWidth: '10rem' }}\r\n              fullWidth\r\n              onClick={(e) => {\r\n                e.preventDefault();\r\n                setSelected('Sell');\r\n                toggleModal();\r\n              }}\r\n              size='sm'\r\n            >\r\n              Sell\r\n            </Button>\r\n          </div>\r\n        </CardContent>\r\n        <CardActions></CardActions>\r\n      </Card>\r\n      <Modal\r\n        show={state.isOpen}\r\n        onClose={toggleModalClose}\r\n        aria-labelledby='contained-modal-title-vcenter'\r\n        centered\r\n      >\r\n        <Modal.Header\r\n          style={{\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n          }}\r\n        >\r\n          <Modal.Title id='contained-modal-title-vcenter'>\r\n            {selected} Amount\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form className='pt-3'>\r\n            <Form.Group className='d-flex search-field'>\r\n              <Form.Control\r\n                type='number'\r\n                placeholder='Amount'\r\n                size='lg'\r\n                className='h-auto'\r\n                value={amt}\r\n                onChange={(e) => setAmt(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n          </Form>\r\n\r\n          <div className='mt-3'>\r\n            <button\r\n              className='btn btn-block btn-primary btn-lg font-weight-medium auth-form-btn'\r\n              onClick={(e) => {\r\n                e.preventDefault();\r\n                if (selected === 'Buy') {\r\n                  buyTokens(amt);\r\n                } else {\r\n                  sellTokens(amt);\r\n                }\r\n                toggleModalClose();\r\n              }}\r\n            >\r\n              Submit\r\n            </button>\r\n          </div>\r\n        </Modal.Body>\r\n        <Modal.Footer\r\n          style={{\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n          }}\r\n        >\r\n          <Button\r\n            onClick={toggleModalClose}\r\n            style={{\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              justifyContent: 'center',\r\n            }}\r\n          >\r\n            close\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({ conn: state.conn, auth: state.auth });\r\n\r\nexport default connect(mapStateToProps, { loadUser, getAllConn })(Wallet);\r\n","module.exports = __webpack_public_path__ + \"static/media/token.d7a38674.png\";"],"sourceRoot":""}