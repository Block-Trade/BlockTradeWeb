{"version":3,"sources":["../node_modules/date-fns/esm/_lib/requiredArgs/index.js","../node_modules/date-fns/esm/toDate/index.js","../node_modules/date-fns/esm/_lib/toInteger/index.js","../node_modules/date-fns/esm/_lib/startOfUTCWeek/index.js","../node_modules/date-fns/esm/_lib/startOfUTCISOWeek/index.js","../node_modules/date-fns/esm/_lib/getUTCWeekYear/index.js","../node_modules/date-fns/esm/_lib/getTimezoneOffsetInMilliseconds/index.js","../node_modules/date-fns/esm/startOfDay/index.js","../node_modules/date-fns/esm/addMonths/index.js","../node_modules/date-fns/esm/isValid/index.js","../node_modules/date-fns/esm/_lib/format/longFormatters/index.js","../node_modules/date-fns/esm/_lib/protectedTokens/index.js","../node_modules/date-fns/esm/_lib/getUTCISOWeekYear/index.js","../node_modules/date-fns/esm/subMilliseconds/index.js","../node_modules/date-fns/esm/locale/en-US/_lib/formatDistance/index.js","../node_modules/date-fns/esm/locale/_lib/buildFormatLongFn/index.js","../node_modules/date-fns/esm/locale/en-US/_lib/formatLong/index.js","../node_modules/date-fns/esm/locale/en-US/_lib/formatRelative/index.js","../node_modules/date-fns/esm/locale/_lib/buildLocalizeFn/index.js","../node_modules/date-fns/esm/locale/_lib/buildMatchFn/index.js","../node_modules/date-fns/esm/locale/en-US/_lib/match/index.js","../node_modules/date-fns/esm/locale/_lib/buildMatchPatternFn/index.js","../node_modules/date-fns/esm/locale/en-US/index.js","../node_modules/date-fns/esm/locale/en-US/_lib/localize/index.js","../node_modules/date-fns/esm/_lib/startOfUTCWeekYear/index.js","../node_modules/date-fns/esm/_lib/getUTCWeek/index.js","../node_modules/date-fns/esm/_lib/startOfUTCISOWeekYear/index.js","../node_modules/date-fns/esm/_lib/getUTCISOWeek/index.js","../node_modules/date-fns/esm/addDays/index.js","../node_modules/date-fns/esm/addMilliseconds/index.js","../node_modules/date-fns/esm/startOfWeek/index.js","../node_modules/date-fns/esm/addYears/index.js","../node_modules/date-fns/esm/endOfYear/index.js","../node_modules/date-fns/esm/startOfHour/index.js","../node_modules/@date-io/date-fns/build/index.esm.js","../node_modules/date-fns/esm/differenceInMilliseconds/index.js","../node_modules/date-fns/esm/isSameHour/index.js","../node_modules/date-fns/esm/eachDayOfInterval/index.js","../node_modules/date-fns/esm/getDaysInMonth/index.js","../node_modules/date-fns/esm/setMonth/index.js","../node_modules/date-fns/esm/isAfter/index.js","../node_modules/date-fns/esm/isBefore/index.js","../node_modules/date-fns/esm/endOfDay/index.js","../node_modules/date-fns/esm/getHours/index.js","../node_modules/date-fns/esm/setHours/index.js","../node_modules/date-fns/esm/setMinutes/index.js","../node_modules/date-fns/esm/getSeconds/index.js","../node_modules/date-fns/esm/setSeconds/index.js","../node_modules/date-fns/esm/isSameDay/index.js","../node_modules/date-fns/esm/isSameMonth/index.js","../node_modules/date-fns/esm/isSameYear/index.js","../node_modules/date-fns/esm/startOfMonth/index.js","../node_modules/date-fns/esm/endOfMonth/index.js","../node_modules/date-fns/esm/getYear/index.js","../node_modules/date-fns/esm/setYear/index.js","../node_modules/date-fns/esm/isEqual/index.js","../node_modules/date-fns/esm/startOfYear/index.js","../node_modules/date-fns/esm/endOfWeek/index.js","../node_modules/date-fns/esm/_lib/assign/index.js","../node_modules/date-fns/esm/_lib/setUTCDay/index.js","../node_modules/date-fns/esm/parse/_lib/parsers/index.js","../node_modules/date-fns/esm/_lib/setUTCWeek/index.js","../node_modules/date-fns/esm/_lib/setUTCISOWeek/index.js","../node_modules/date-fns/esm/_lib/setUTCISODay/index.js","../node_modules/date-fns/esm/parse/index.js","../node_modules/date-fns/esm/_lib/addLeadingZeros/index.js","../node_modules/date-fns/esm/_lib/format/lightFormatters/index.js","../node_modules/date-fns/esm/_lib/format/formatters/index.js","../node_modules/date-fns/esm/_lib/getUTCDayOfYear/index.js","../node_modules/date-fns/esm/format/index.js","../node_modules/@material-ui/core/esm/Button/Button.js","../node_modules/@material-ui/icons/AddCircleRounded.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","app/components/tradeForm/TradeForm4.js"],"names":["requiredArgs","required","args","length","TypeError","toDate","argument","arguments","argStr","Object","prototype","toString","call","Date","getTime","console","warn","Error","stack","NaN","toInteger","dirtyNumber","number","Number","isNaN","Math","ceil","floor","startOfUTCWeek","dirtyDate","dirtyOptions","options","locale","localeWeekStartsOn","weekStartsOn","defaultWeekStartsOn","RangeError","date","day","getUTCDay","diff","setUTCDate","getUTCDate","setUTCHours","startOfUTCISOWeek","getUTCWeekYear","year","getUTCFullYear","localeFirstWeekContainsDate","firstWeekContainsDate","defaultFirstWeekContainsDate","firstWeekOfNextYear","setUTCFullYear","startOfNextYear","firstWeekOfThisYear","startOfThisYear","getDateMillisecondsPart","getTimezoneOffsetInMilliseconds","baseTimezoneOffset","getTimezoneOffset","setSeconds","startOfDay","setHours","addMonths","dirtyAmount","amount","dayOfMonth","getDate","endOfDesiredMonth","setMonth","getMonth","daysInMonth","setFullYear","getFullYear","isValid","dateLongFormatter","pattern","formatLong","width","timeLongFormatter","time","longFormatters","p","P","dateTimeFormat","matchResult","match","datePattern","timePattern","dateTime","replace","protectedDayOfYearTokens","protectedWeekYearTokens","isProtectedDayOfYearToken","token","indexOf","isProtectedWeekYearToken","throwProtectedError","format","input","concat","getUTCISOWeekYear","fourthOfJanuaryOfNextYear","fourthOfJanuaryOfThisYear","subMilliseconds","addMilliseconds","formatDistanceLocale","lessThanXSeconds","one","other","xSeconds","halfAMinute","lessThanXMinutes","xMinutes","aboutXHours","xHours","xDays","aboutXWeeks","xWeeks","aboutXMonths","xMonths","aboutXYears","xYears","overXYears","almostXYears","buildFormatLongFn","String","defaultWidth","formats","full","long","medium","short","formatRelativeLocale","lastWeek","yesterday","today","tomorrow","nextWeek","buildLocalizeFn","dirtyIndex","valuesArray","context","formattingValues","defaultFormattingWidth","_defaultWidth","_width","values","argumentCallback","buildMatchFn","dirtyString","string","matchPattern","matchPatterns","defaultMatchWidth","value","matchedString","parsePatterns","defaultParseWidth","array","predicate","key","findIndex","test","object","hasOwnProperty","findKey","valueCallback","rest","slice","code","formatDistance","count","result","addSuffix","comparison","formatRelative","_date","_baseDate","_options","localize","ordinalNumber","_dirtyOptions","rem100","era","narrow","abbreviated","wide","quarter","month","dayPeriod","am","pm","midnight","noon","morning","afternoon","evening","night","parsePattern","parseInt","parseResult","any","index","startOfUTCWeekYear","firstWeek","getUTCWeek","round","startOfUTCISOWeekYear","fourthOfJanuary","getUTCISOWeek","addDays","setDate","timestamp","startOfWeek","getDay","addYears","endOfYear","startOfHour","setMinutes","DateFnsUtils","_a","this","yearFormat","yearMonthFormat","dateTime12hFormat","dateTime24hFormat","time12hFormat","time24hFormat","dateFormat","getDiff","comparing","dirtyDateLeft","dirtyDateRight","dateLeft","dateRight","differenceInMilliseconds","isAfter","isBefore","endOfDay","getHours","getSeconds","isSameDay","isSameMonth","isSameYear","isSameHour","dateLeftStartOfHour","dateRightStartOfHour","startOfMonth","endOfMonth","getYear","setYear","parse","formatString","dateFnsParse","isEqual","isNull","isAfterDay","isBeforeDay","isBeforeYear","startOfYear","isAfterYear","formatNumber","numberToFormat","getMinutes","getMeridiemText","ampm","getNextMonth","getPreviousMonth","getMonthArray","monthArray","prevMonth","push","mergeDateAndTime","getWeekdays","_this","now","dirtyInterval","interval","startDate","start","endDate","end","endTime","dates","currentDate","step","eachDayOfInterval","endOfWeek","map","getWeekArray","current","nestedWeeks","weekNumber","getYearRange","years","getCalendarHeaderText","getYearText","getDatePickerHeaderText","getDateTimePickerHeaderText","getMonthText","getDayText","getHourText","getMinuteText","getSecondText","getDaysInMonth","monthIndex","lastDayOfMonth","dirtyMonth","dateWithDesiredMonth","min","dirtyDateToCompare","dateToCompare","hours","dirtyHours","dirtyMinutes","minutes","seconds","dirtySeconds","dateLeftStartOfDay","dateRightStartOfDay","dirtyYear","dirtyLeftDate","dirtyRightDate","cleanDate","assign","target","dirtyObject","property","setUTCDay","dirtyDay","currentDay","remainder","dayIndex","numericPatterns","timezonePatterns","parseNumericPattern","parseTimezonePattern","parseAnyDigitsSigned","parseNDigits","n","RegExp","parseNDigitsSigned","dayPeriodEnumToHours","enumValue","normalizeTwoDigitYear","twoDigitYear","currentYear","isCommonEra","absCurrentYear","rangeEnd","DAYS_IN_MONTH","DAYS_IN_MONTH_LEAP_YEAR","isLeapYearIndex","parsers","G","priority","set","flags","incompatibleTokens","y","isTwoDigitYear","unit","validate","normalizedTwoDigitYear","Y","R","_match","_flags","firstWeekOfYear","u","Q","setUTCMonth","q","M","L","w","dirtyWeek","week","setUTCWeek","I","dirtyISOWeek","isoWeek","setUTCISOWeek","d","subPriority","isLeapYear","getUTCMonth","D","E","e","wholeWeekDays","c","i","setUTCISODay","a","b","B","h","isPM","getUTCHours","H","K","k","m","setUTCMinutes","s","setUTCSeconds","S","pow","setUTCMilliseconds","X","timestampIsSet","x","t","_token","T","formattingTokensRegExp","longFormattingTokensRegExp","escapedStringRegExp","doubleQuoteRegExp","notWhitespaceRegExp","unescapedLatinCharacterRegExp","dirtyDateString","dirtyFormatString","dirtyReferenceDate","dateString","defaultLocale","subFnOptions","setters","dateToSystemTimezone","tokens","substring","firstCharacter","longFormatter","join","usedTokens","useAdditionalWeekYearTokens","useAdditionalDayOfYearTokens","parser","Array","isArray","incompatibleToken","_i","usedToken","fullToken","cleanEscapedString","uniquePrioritySetters","setter","sort","filter","setterArray","utcDate","convertedDate","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","addLeadingZeros","targetLength","sign","output","abs","formatters","signedYear","dayPeriodEnumValue","toUpperCase","numberOfDigits","milliseconds","dayPeriodEnum","formatTimezoneShort","offset","dirtyDelimiter","absOffset","delimiter","formatTimezoneWithOptionalMinutes","formatTimezone","lightFormatters","signedWeekYear","weekYear","dayOfYear","startOfYearTimestamp","difference","getUTCDayOfYear","dayOfWeek","localDayOfWeek","isoDayOfWeek","_localize","timezoneOffset","_originalDate","O","z","originalDate","dirtyFormatStr","formatStr","formatterOptions","formatter","Button","React","props","ref","children","classes","className","_props$color","color","_props$component","component","_props$disabled","disabled","_props$disableElevati","disableElevation","_props$disableFocusRi","disableFocusRipple","endIconProp","endIcon","focusVisibleClassName","_props$fullWidth","fullWidth","_props$size","size","startIconProp","startIcon","_props$type","type","_props$variant","variant","_objectWithoutProperties","clsx","capitalize","ButtonBase","_extends","root","colorInherit","focusRipple","focusVisible","label","withStyles","theme","typography","button","boxSizing","minWidth","padding","borderRadius","shape","palette","text","primary","transition","transitions","create","duration","textDecoration","backgroundColor","fade","action","hoverOpacity","display","alignItems","justifyContent","textPrimary","main","textSecondary","secondary","outlined","border","disabledBackground","outlinedPrimary","outlinedSecondary","contained","getContrastText","grey","boxShadow","shadows","A100","containedPrimary","contrastText","dark","containedSecondary","borderColor","textSizeSmall","fontSize","pxToRem","textSizeLarge","outlinedSizeSmall","outlinedSizeLarge","containedSizeSmall","containedSizeLarge","sizeSmall","sizeLarge","marginRight","marginLeft","iconSizeSmall","iconSizeMedium","iconSizeLarge","name","_interopRequireDefault","require","defineProperty","exports","default","_react","_default","createElement","_toConsumableArray","arr","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","useStyles","makeStyles","flexGrow","margin","spacing","paper","textAlign","wrapper","position","buttonSuccess","green","fabProgress","top","left","zIndex","buttonProgress","marginTop","formControl","connect","state","tradeDeal","dispatch","setDescOfConsign","descOfConsign","history","useState","pid","setPID","fxRate","setFxRate","description","setDescription","sellPrice","setSellPrice","tax","setTax","itemPrice","setItemPrice","unitsPk","setUnitsPk","qty","setQty","setAmount","products","setProducts","totalAmount","setTotalAmount","totalNetWt","setTotalNetWt","currDisc","setCurrDisc","totalCube","setTotalCube","totalGross","setTotalGross","success","setSuccess","loading","setLoading","flag","timer","useRef","buttonClassname","useEffect","descriptionOfConsignmentInfo","product","nextForm","log","style","Container","maxWidth","Grid","container","item","xs","TextField","id","onChange","multiline","rows","maxHeight","minHeight","onClick","preventDefault","Fab","aria-label","window","setTimeout","localStorage","setItem","CircularProgress"],"mappings":"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","file":"static/js/16.a891b233.chunk.js","sourcesContent":["export default function requiredArgs(required, args) {\n  if (args.length < required) {\n    throw new TypeError(required + ' argument' + (required > 1 ? 's' : '') + ' required, but only ' + args.length + ' present');\n  }\n}","import requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @param {Date|Number} argument - the value to convert\n * @returns {Date} the parsed date in the local time zone\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\n\nexport default function toDate(argument) {\n  requiredArgs(1, arguments);\n  var argStr = Object.prototype.toString.call(argument); // Clone the date\n\n  if (argument instanceof Date || typeof argument === 'object' && argStr === '[object Date]') {\n    // Prevent the date to lose the milliseconds when passed to new Date() in IE10\n    return new Date(argument.getTime());\n  } else if (typeof argument === 'number' || argStr === '[object Number]') {\n    return new Date(argument);\n  } else {\n    if ((typeof argument === 'string' || argStr === '[object String]') && typeof console !== 'undefined') {\n      // eslint-disable-next-line no-console\n      console.warn(\"Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://git.io/fjule\"); // eslint-disable-next-line no-console\n\n      console.warn(new Error().stack);\n    }\n\n    return new Date(NaN);\n  }\n}","export default function toInteger(dirtyNumber) {\n  if (dirtyNumber === null || dirtyNumber === true || dirtyNumber === false) {\n    return NaN;\n  }\n\n  var number = Number(dirtyNumber);\n\n  if (isNaN(number)) {\n    return number;\n  }\n\n  return number < 0 ? Math.ceil(number) : Math.floor(number);\n}","import toInteger from '../toInteger/index.js';\nimport toDate from '../../toDate/index.js';\nimport requiredArgs from '../requiredArgs/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCWeek(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  var date = toDate(dirtyDate);\n  var day = date.getUTCDay();\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n  date.setUTCDate(date.getUTCDate() - diff);\n  date.setUTCHours(0, 0, 0, 0);\n  return date;\n}","import toDate from '../../toDate/index.js';\nimport requiredArgs from '../requiredArgs/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCISOWeek(dirtyDate) {\n  requiredArgs(1, arguments);\n  var weekStartsOn = 1;\n  var date = toDate(dirtyDate);\n  var day = date.getUTCDay();\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n  date.setUTCDate(date.getUTCDate() - diff);\n  date.setUTCHours(0, 0, 0, 0);\n  return date;\n}","import toInteger from '../toInteger/index.js';\nimport toDate from '../../toDate/index.js';\nimport startOfUTCWeek from '../startOfUTCWeek/index.js';\nimport requiredArgs from '../requiredArgs/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCWeekYear(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate, dirtyOptions);\n  var year = date.getUTCFullYear();\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\n\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');\n  }\n\n  var firstWeekOfNextYear = new Date(0);\n  firstWeekOfNextYear.setUTCFullYear(year + 1, 0, firstWeekContainsDate);\n  firstWeekOfNextYear.setUTCHours(0, 0, 0, 0);\n  var startOfNextYear = startOfUTCWeek(firstWeekOfNextYear, dirtyOptions);\n  var firstWeekOfThisYear = new Date(0);\n  firstWeekOfThisYear.setUTCFullYear(year, 0, firstWeekContainsDate);\n  firstWeekOfThisYear.setUTCHours(0, 0, 0, 0);\n  var startOfThisYear = startOfUTCWeek(firstWeekOfThisYear, dirtyOptions);\n\n  if (date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}","var MILLISECONDS_IN_MINUTE = 60000;\n\nfunction getDateMillisecondsPart(date) {\n  return date.getTime() % MILLISECONDS_IN_MINUTE;\n}\n/**\n * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.\n * They usually appear for dates that denote time before the timezones were introduced\n * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891\n * and GMT+01:00:00 after that date)\n *\n * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,\n * which would lead to incorrect calculations.\n *\n * This function returns the timezone offset in milliseconds that takes seconds in account.\n */\n\n\nexport default function getTimezoneOffsetInMilliseconds(dirtyDate) {\n  var date = new Date(dirtyDate.getTime());\n  var baseTimezoneOffset = Math.ceil(date.getTimezoneOffset());\n  date.setSeconds(0, 0);\n  var hasNegativeUTCOffset = baseTimezoneOffset > 0;\n  var millisecondsPartOfTimezoneOffset = hasNegativeUTCOffset ? (MILLISECONDS_IN_MINUTE + getDateMillisecondsPart(date)) % MILLISECONDS_IN_MINUTE : getDateMillisecondsPart(date);\n  return baseTimezoneOffset * MILLISECONDS_IN_MINUTE + millisecondsPartOfTimezoneOffset;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name startOfDay\n * @category Day Helpers\n * @summary Return the start of a day for the given date.\n *\n * @description\n * Return the start of a day for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of a day\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of a day for 2 September 2014 11:55:00:\n * var result = startOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 00:00:00\n */\n\nexport default function startOfDay(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import toInteger from '../_lib/toInteger/index.js';\nimport toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name addMonths\n * @category Month Helpers\n * @summary Add the specified number of months to the given date.\n *\n * @description\n * Add the specified number of months to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of months to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the months added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 5 months to 1 September 2014:\n * var result = addMonths(new Date(2014, 8, 1), 5)\n * //=> Sun Feb 01 2015 00:00:00\n */\n\nexport default function addMonths(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var amount = toInteger(dirtyAmount);\n\n  if (isNaN(amount)) {\n    return new Date(NaN);\n  }\n\n  if (!amount) {\n    // If 0 months, no-op to avoid changing times in the hour before end of DST\n    return date;\n  }\n\n  var dayOfMonth = date.getDate(); // The JS Date object supports date math by accepting out-of-bounds values for\n  // month, day, etc. For example, new Date(2020, 1, 0) returns 31 Dec 2019 and\n  // new Date(2020, 13, 1) returns 1 Feb 2021.  This is *almost* the behavior we\n  // want except that dates will wrap around the end of a month, meaning that\n  // new Date(2020, 13, 31) will return 3 Mar 2021 not 28 Feb 2021 as desired. So\n  // we'll default to the end of the desired month by adding 1 to the desired\n  // month and using a date of 0 to back up one day to the end of the desired\n  // month.\n\n  var endOfDesiredMonth = new Date(date.getTime());\n  endOfDesiredMonth.setMonth(date.getMonth() + amount + 1, 0);\n  var daysInMonth = endOfDesiredMonth.getDate();\n\n  if (dayOfMonth >= daysInMonth) {\n    // If we're already at the end of the month, then this is the correct date\n    // and we're done.\n    return endOfDesiredMonth;\n  } else {\n    // Otherwise, we now know that setting the original day-of-month value won't\n    // cause an overflow, so set the desired day-of-month. Note that we can't\n    // just set the date of `endOfDesiredMonth` because that object may have had\n    // its time changed in the unusual case where where a DST transition was on\n    // the last day of the month and its local time was in the hour skipped or\n    // repeated next to a DST transition.  So we use `date` instead which is\n    // guaranteed to still have the original time.\n    date.setFullYear(endOfDesiredMonth.getFullYear(), endOfDesiredMonth.getMonth(), dayOfMonth);\n    return date;\n  }\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isValid\n * @category Common Helpers\n * @summary Is the given date valid?\n *\n * @description\n * Returns false if argument is Invalid Date and true otherwise.\n * Argument is converted to Date using `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}\n * Invalid Date is a Date, whose time value is NaN.\n *\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - Now `isValid` doesn't throw an exception\n *   if the first argument is not an instance of Date.\n *   Instead, argument is converted beforehand using `toDate`.\n *\n *   Examples:\n *\n *   | `isValid` argument        | Before v2.0.0 | v2.0.0 onward |\n *   |---------------------------|---------------|---------------|\n *   | `new Date()`              | `true`        | `true`        |\n *   | `new Date('2016-01-01')`  | `true`        | `true`        |\n *   | `new Date('')`            | `false`       | `false`       |\n *   | `new Date(1488370835081)` | `true`        | `true`        |\n *   | `new Date(NaN)`           | `false`       | `false`       |\n *   | `'2016-01-01'`            | `TypeError`   | `false`       |\n *   | `''`                      | `TypeError`   | `false`       |\n *   | `1488370835081`           | `TypeError`   | `true`        |\n *   | `NaN`                     | `TypeError`   | `false`       |\n *\n *   We introduce this change to make *date-fns* consistent with ECMAScript behavior\n *   that try to coerce arguments to the expected type\n *   (which is also the case with other *date-fns* functions).\n *\n * @param {*} date - the date to check\n * @returns {Boolean} the date is valid\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // For the valid date:\n * var result = isValid(new Date(2014, 1, 31))\n * //=> true\n *\n * @example\n * // For the value, convertable into a date:\n * var result = isValid(1393804800000)\n * //=> true\n *\n * @example\n * // For the invalid date:\n * var result = isValid(new Date(''))\n * //=> false\n */\n\nexport default function isValid(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  return !isNaN(date);\n}","function dateLongFormatter(pattern, formatLong) {\n  switch (pattern) {\n    case 'P':\n      return formatLong.date({\n        width: 'short'\n      });\n\n    case 'PP':\n      return formatLong.date({\n        width: 'medium'\n      });\n\n    case 'PPP':\n      return formatLong.date({\n        width: 'long'\n      });\n\n    case 'PPPP':\n    default:\n      return formatLong.date({\n        width: 'full'\n      });\n  }\n}\n\nfunction timeLongFormatter(pattern, formatLong) {\n  switch (pattern) {\n    case 'p':\n      return formatLong.time({\n        width: 'short'\n      });\n\n    case 'pp':\n      return formatLong.time({\n        width: 'medium'\n      });\n\n    case 'ppp':\n      return formatLong.time({\n        width: 'long'\n      });\n\n    case 'pppp':\n    default:\n      return formatLong.time({\n        width: 'full'\n      });\n  }\n}\n\nfunction dateTimeLongFormatter(pattern, formatLong) {\n  var matchResult = pattern.match(/(P+)(p+)?/);\n  var datePattern = matchResult[1];\n  var timePattern = matchResult[2];\n\n  if (!timePattern) {\n    return dateLongFormatter(pattern, formatLong);\n  }\n\n  var dateTimeFormat;\n\n  switch (datePattern) {\n    case 'P':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'short'\n      });\n      break;\n\n    case 'PP':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'medium'\n      });\n      break;\n\n    case 'PPP':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'long'\n      });\n      break;\n\n    case 'PPPP':\n    default:\n      dateTimeFormat = formatLong.dateTime({\n        width: 'full'\n      });\n      break;\n  }\n\n  return dateTimeFormat.replace('{{date}}', dateLongFormatter(datePattern, formatLong)).replace('{{time}}', timeLongFormatter(timePattern, formatLong));\n}\n\nvar longFormatters = {\n  p: timeLongFormatter,\n  P: dateTimeLongFormatter\n};\nexport default longFormatters;","var protectedDayOfYearTokens = ['D', 'DD'];\nvar protectedWeekYearTokens = ['YY', 'YYYY'];\nexport function isProtectedDayOfYearToken(token) {\n  return protectedDayOfYearTokens.indexOf(token) !== -1;\n}\nexport function isProtectedWeekYearToken(token) {\n  return protectedWeekYearTokens.indexOf(token) !== -1;\n}\nexport function throwProtectedError(token, format, input) {\n  if (token === 'YYYY') {\n    throw new RangeError(\"Use `yyyy` instead of `YYYY` (in `\".concat(format, \"`) for formatting years to the input `\").concat(input, \"`; see: https://git.io/fxCyr\"));\n  } else if (token === 'YY') {\n    throw new RangeError(\"Use `yy` instead of `YY` (in `\".concat(format, \"`) for formatting years to the input `\").concat(input, \"`; see: https://git.io/fxCyr\"));\n  } else if (token === 'D') {\n    throw new RangeError(\"Use `d` instead of `D` (in `\".concat(format, \"`) for formatting days of the month to the input `\").concat(input, \"`; see: https://git.io/fxCyr\"));\n  } else if (token === 'DD') {\n    throw new RangeError(\"Use `dd` instead of `DD` (in `\".concat(format, \"`) for formatting days of the month to the input `\").concat(input, \"`; see: https://git.io/fxCyr\"));\n  }\n}","import toDate from '../../toDate/index.js';\nimport startOfUTCISOWeek from '../startOfUTCISOWeek/index.js';\nimport requiredArgs from '../requiredArgs/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCISOWeekYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getUTCFullYear();\n  var fourthOfJanuaryOfNextYear = new Date(0);\n  fourthOfJanuaryOfNextYear.setUTCFullYear(year + 1, 0, 4);\n  fourthOfJanuaryOfNextYear.setUTCHours(0, 0, 0, 0);\n  var startOfNextYear = startOfUTCISOWeek(fourthOfJanuaryOfNextYear);\n  var fourthOfJanuaryOfThisYear = new Date(0);\n  fourthOfJanuaryOfThisYear.setUTCFullYear(year, 0, 4);\n  fourthOfJanuaryOfThisYear.setUTCHours(0, 0, 0, 0);\n  var startOfThisYear = startOfUTCISOWeek(fourthOfJanuaryOfThisYear);\n\n  if (date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}","import toInteger from '../_lib/toInteger/index.js';\nimport addMilliseconds from '../addMilliseconds/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name subMilliseconds\n * @category Millisecond Helpers\n * @summary Subtract the specified number of milliseconds from the given date.\n *\n * @description\n * Subtract the specified number of milliseconds from the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of milliseconds to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the milliseconds subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 750 milliseconds from 10 July 2014 12:45:30.000:\n * var result = subMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)\n * //=> Thu Jul 10 2014 12:45:29.250\n */\n\nexport default function subMilliseconds(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addMilliseconds(dirtyDate, -amount);\n}","var formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: 'less than a second',\n    other: 'less than {{count}} seconds'\n  },\n  xSeconds: {\n    one: '1 second',\n    other: '{{count}} seconds'\n  },\n  halfAMinute: 'half a minute',\n  lessThanXMinutes: {\n    one: 'less than a minute',\n    other: 'less than {{count}} minutes'\n  },\n  xMinutes: {\n    one: '1 minute',\n    other: '{{count}} minutes'\n  },\n  aboutXHours: {\n    one: 'about 1 hour',\n    other: 'about {{count}} hours'\n  },\n  xHours: {\n    one: '1 hour',\n    other: '{{count}} hours'\n  },\n  xDays: {\n    one: '1 day',\n    other: '{{count}} days'\n  },\n  aboutXWeeks: {\n    one: 'about 1 week',\n    other: 'about {{count}} weeks'\n  },\n  xWeeks: {\n    one: '1 week',\n    other: '{{count}} weeks'\n  },\n  aboutXMonths: {\n    one: 'about 1 month',\n    other: 'about {{count}} months'\n  },\n  xMonths: {\n    one: '1 month',\n    other: '{{count}} months'\n  },\n  aboutXYears: {\n    one: 'about 1 year',\n    other: 'about {{count}} years'\n  },\n  xYears: {\n    one: '1 year',\n    other: '{{count}} years'\n  },\n  overXYears: {\n    one: 'over 1 year',\n    other: 'over {{count}} years'\n  },\n  almostXYears: {\n    one: 'almost 1 year',\n    other: 'almost {{count}} years'\n  }\n};\nexport default function formatDistance(token, count, options) {\n  options = options || {};\n  var result;\n\n  if (typeof formatDistanceLocale[token] === 'string') {\n    result = formatDistanceLocale[token];\n  } else if (count === 1) {\n    result = formatDistanceLocale[token].one;\n  } else {\n    result = formatDistanceLocale[token].other.replace('{{count}}', count);\n  }\n\n  if (options.addSuffix) {\n    if (options.comparison > 0) {\n      return 'in ' + result;\n    } else {\n      return result + ' ago';\n    }\n  }\n\n  return result;\n}","export default function buildFormatLongFn(args) {\n  return function (dirtyOptions) {\n    var options = dirtyOptions || {};\n    var width = options.width ? String(options.width) : args.defaultWidth;\n    var format = args.formats[width] || args.formats[args.defaultWidth];\n    return format;\n  };\n}","import buildFormatLongFn from '../../../_lib/buildFormatLongFn/index.js';\nvar dateFormats = {\n  full: 'EEEE, MMMM do, y',\n  long: 'MMMM do, y',\n  medium: 'MMM d, y',\n  short: 'MM/dd/yyyy'\n};\nvar timeFormats = {\n  full: 'h:mm:ss a zzzz',\n  long: 'h:mm:ss a z',\n  medium: 'h:mm:ss a',\n  short: 'h:mm a'\n};\nvar dateTimeFormats = {\n  full: \"{{date}} 'at' {{time}}\",\n  long: \"{{date}} 'at' {{time}}\",\n  medium: '{{date}}, {{time}}',\n  short: '{{date}}, {{time}}'\n};\nvar formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: 'full'\n  }),\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: 'full'\n  }),\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: 'full'\n  })\n};\nexport default formatLong;","var formatRelativeLocale = {\n  lastWeek: \"'last' eeee 'at' p\",\n  yesterday: \"'yesterday at' p\",\n  today: \"'today at' p\",\n  tomorrow: \"'tomorrow at' p\",\n  nextWeek: \"eeee 'at' p\",\n  other: 'P'\n};\nexport default function formatRelative(token, _date, _baseDate, _options) {\n  return formatRelativeLocale[token];\n}","export default function buildLocalizeFn(args) {\n  return function (dirtyIndex, dirtyOptions) {\n    var options = dirtyOptions || {};\n    var context = options.context ? String(options.context) : 'standalone';\n    var valuesArray;\n\n    if (context === 'formatting' && args.formattingValues) {\n      var defaultWidth = args.defaultFormattingWidth || args.defaultWidth;\n      var width = options.width ? String(options.width) : defaultWidth;\n      valuesArray = args.formattingValues[width] || args.formattingValues[defaultWidth];\n    } else {\n      var _defaultWidth = args.defaultWidth;\n\n      var _width = options.width ? String(options.width) : args.defaultWidth;\n\n      valuesArray = args.values[_width] || args.values[_defaultWidth];\n    }\n\n    var index = args.argumentCallback ? args.argumentCallback(dirtyIndex) : dirtyIndex;\n    return valuesArray[index];\n  };\n}","export default function buildMatchFn(args) {\n  return function (dirtyString, dirtyOptions) {\n    var string = String(dirtyString);\n    var options = dirtyOptions || {};\n    var width = options.width;\n    var matchPattern = width && args.matchPatterns[width] || args.matchPatterns[args.defaultMatchWidth];\n    var matchResult = string.match(matchPattern);\n\n    if (!matchResult) {\n      return null;\n    }\n\n    var matchedString = matchResult[0];\n    var parsePatterns = width && args.parsePatterns[width] || args.parsePatterns[args.defaultParseWidth];\n    var value;\n\n    if (Object.prototype.toString.call(parsePatterns) === '[object Array]') {\n      value = findIndex(parsePatterns, function (pattern) {\n        return pattern.test(matchedString);\n      });\n    } else {\n      value = findKey(parsePatterns, function (pattern) {\n        return pattern.test(matchedString);\n      });\n    }\n\n    value = args.valueCallback ? args.valueCallback(value) : value;\n    value = options.valueCallback ? options.valueCallback(value) : value;\n    return {\n      value: value,\n      rest: string.slice(matchedString.length)\n    };\n  };\n}\n\nfunction findKey(object, predicate) {\n  for (var key in object) {\n    if (object.hasOwnProperty(key) && predicate(object[key])) {\n      return key;\n    }\n  }\n}\n\nfunction findIndex(array, predicate) {\n  for (var key = 0; key < array.length; key++) {\n    if (predicate(array[key])) {\n      return key;\n    }\n  }\n}","import buildMatchPatternFn from '../../../_lib/buildMatchPatternFn/index.js';\nimport buildMatchFn from '../../../_lib/buildMatchFn/index.js';\nvar matchOrdinalNumberPattern = /^(\\d+)(th|st|nd|rd)?/i;\nvar parseOrdinalNumberPattern = /\\d+/i;\nvar matchEraPatterns = {\n  narrow: /^(b|a)/i,\n  abbreviated: /^(b\\.?\\s?c\\.?|b\\.?\\s?c\\.?\\s?e\\.?|a\\.?\\s?d\\.?|c\\.?\\s?e\\.?)/i,\n  wide: /^(before christ|before common era|anno domini|common era)/i\n};\nvar parseEraPatterns = {\n  any: [/^b/i, /^(a|c)/i]\n};\nvar matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^q[1234]/i,\n  wide: /^[1234](th|st|nd|rd)? quarter/i\n};\nvar parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i]\n};\nvar matchMonthPatterns = {\n  narrow: /^[jfmasond]/i,\n  abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,\n  wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i\n};\nvar parseMonthPatterns = {\n  narrow: [/^j/i, /^f/i, /^m/i, /^a/i, /^m/i, /^j/i, /^j/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i],\n  any: [/^ja/i, /^f/i, /^mar/i, /^ap/i, /^may/i, /^jun/i, /^jul/i, /^au/i, /^s/i, /^o/i, /^n/i, /^d/i]\n};\nvar matchDayPatterns = {\n  narrow: /^[smtwf]/i,\n  short: /^(su|mo|tu|we|th|fr|sa)/i,\n  abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,\n  wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i\n};\nvar parseDayPatterns = {\n  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],\n  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i]\n};\nvar matchDayPeriodPatterns = {\n  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,\n  any: /^([ap]\\.?\\s?m\\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i\n};\nvar parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^mi/i,\n    noon: /^no/i,\n    morning: /morning/i,\n    afternoon: /afternoon/i,\n    evening: /evening/i,\n    night: /night/i\n  }\n};\nvar match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: function (value) {\n      return parseInt(value, 10);\n    }\n  }),\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: 'any'\n  }),\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: 'any',\n    valueCallback: function (index) {\n      return index + 1;\n    }\n  }),\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: 'any'\n  }),\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: 'any'\n  }),\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: 'any',\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: 'any'\n  })\n};\nexport default match;","export default function buildMatchPatternFn(args) {\n  return function (dirtyString, dirtyOptions) {\n    var string = String(dirtyString);\n    var options = dirtyOptions || {};\n    var matchResult = string.match(args.matchPattern);\n\n    if (!matchResult) {\n      return null;\n    }\n\n    var matchedString = matchResult[0];\n    var parseResult = string.match(args.parsePattern);\n\n    if (!parseResult) {\n      return null;\n    }\n\n    var value = args.valueCallback ? args.valueCallback(parseResult[0]) : parseResult[0];\n    value = options.valueCallback ? options.valueCallback(value) : value;\n    return {\n      value: value,\n      rest: string.slice(matchedString.length)\n    };\n  };\n}","import formatDistance from './_lib/formatDistance/index.js';\nimport formatLong from './_lib/formatLong/index.js';\nimport formatRelative from './_lib/formatRelative/index.js';\nimport localize from './_lib/localize/index.js';\nimport match from './_lib/match/index.js';\n/**\n * @type {Locale}\n * @category Locales\n * @summary English locale (United States).\n * @language English\n * @iso-639-2 eng\n * @author Sasha Koss [@kossnocorp]{@link https://github.com/kossnocorp}\n * @author Lesha Koss [@leshakoss]{@link https://github.com/leshakoss}\n */\n\nvar locale = {\n  code: 'en-US',\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 0\n    /* Sunday */\n    ,\n    firstWeekContainsDate: 1\n  }\n};\nexport default locale;","import buildLocalizeFn from '../../../_lib/buildLocalizeFn/index.js';\nvar eraValues = {\n  narrow: ['B', 'A'],\n  abbreviated: ['BC', 'AD'],\n  wide: ['Before Christ', 'Anno Domini']\n};\nvar quarterValues = {\n  narrow: ['1', '2', '3', '4'],\n  abbreviated: ['Q1', 'Q2', 'Q3', 'Q4'],\n  wide: ['1st quarter', '2nd quarter', '3rd quarter', '4th quarter'] // Note: in English, the names of days of the week and months are capitalized.\n  // If you are making a new locale based on this one, check if the same is true for the language you're working on.\n  // Generally, formatted dates should look like they are in the middle of a sentence,\n  // e.g. in Spanish language the weekdays and months should be in the lowercase.\n\n};\nvar monthValues = {\n  narrow: ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'],\n  abbreviated: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n  wide: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\n};\nvar dayValues = {\n  narrow: ['S', 'M', 'T', 'W', 'T', 'F', 'S'],\n  short: ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],\n  abbreviated: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n  wide: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']\n};\nvar dayPeriodValues = {\n  narrow: {\n    am: 'a',\n    pm: 'p',\n    midnight: 'mi',\n    noon: 'n',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  },\n  abbreviated: {\n    am: 'AM',\n    pm: 'PM',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  },\n  wide: {\n    am: 'a.m.',\n    pm: 'p.m.',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  }\n};\nvar formattingDayPeriodValues = {\n  narrow: {\n    am: 'a',\n    pm: 'p',\n    midnight: 'mi',\n    noon: 'n',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  },\n  abbreviated: {\n    am: 'AM',\n    pm: 'PM',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  },\n  wide: {\n    am: 'a.m.',\n    pm: 'p.m.',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  }\n};\n\nfunction ordinalNumber(dirtyNumber, _dirtyOptions) {\n  var number = Number(dirtyNumber); // If ordinal numbers depend on context, for example,\n  // if they are different for different grammatical genders,\n  // use `options.unit`:\n  //\n  //   var options = dirtyOptions || {}\n  //   var unit = String(options.unit)\n  //\n  // where `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',\n  // 'day', 'hour', 'minute', 'second'\n\n  var rem100 = number % 100;\n\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n        return number + 'st';\n\n      case 2:\n        return number + 'nd';\n\n      case 3:\n        return number + 'rd';\n    }\n  }\n\n  return number + 'th';\n}\n\nvar localize = {\n  ordinalNumber: ordinalNumber,\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: 'wide'\n  }),\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: 'wide',\n    argumentCallback: function (quarter) {\n      return Number(quarter) - 1;\n    }\n  }),\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: 'wide'\n  }),\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: 'wide'\n  }),\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: 'wide',\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: 'wide'\n  })\n};\nexport default localize;","import toInteger from '../toInteger/index.js';\nimport getUTCWeekYear from '../getUTCWeekYear/index.js';\nimport startOfUTCWeek from '../startOfUTCWeek/index.js';\nimport requiredArgs from '../requiredArgs/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCWeekYear(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate);\n  var year = getUTCWeekYear(dirtyDate, dirtyOptions);\n  var firstWeek = new Date(0);\n  firstWeek.setUTCFullYear(year, 0, firstWeekContainsDate);\n  firstWeek.setUTCHours(0, 0, 0, 0);\n  var date = startOfUTCWeek(firstWeek, dirtyOptions);\n  return date;\n}","import toDate from '../../toDate/index.js';\nimport startOfUTCWeek from '../startOfUTCWeek/index.js';\nimport startOfUTCWeekYear from '../startOfUTCWeekYear/index.js';\nimport requiredArgs from '../requiredArgs/index.js';\nvar MILLISECONDS_IN_WEEK = 604800000; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCWeek(dirtyDate, options) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var diff = startOfUTCWeek(date, options).getTime() - startOfUTCWeekYear(date, options).getTime(); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;\n}","import getUTCISOWeekYear from '../getUTCISOWeekYear/index.js';\nimport startOfUTCISOWeek from '../startOfUTCISOWeek/index.js';\nimport requiredArgs from '../requiredArgs/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCISOWeekYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var year = getUTCISOWeekYear(dirtyDate);\n  var fourthOfJanuary = new Date(0);\n  fourthOfJanuary.setUTCFullYear(year, 0, 4);\n  fourthOfJanuary.setUTCHours(0, 0, 0, 0);\n  var date = startOfUTCISOWeek(fourthOfJanuary);\n  return date;\n}","import toDate from '../../toDate/index.js';\nimport startOfUTCISOWeek from '../startOfUTCISOWeek/index.js';\nimport startOfUTCISOWeekYear from '../startOfUTCISOWeekYear/index.js';\nimport requiredArgs from '../requiredArgs/index.js';\nvar MILLISECONDS_IN_WEEK = 604800000; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCISOWeek(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var diff = startOfUTCISOWeek(date).getTime() - startOfUTCISOWeekYear(date).getTime(); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;\n}","import toInteger from '../_lib/toInteger/index.js';\nimport toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name addDays\n * @category Day Helpers\n * @summary Add the specified number of days to the given date.\n *\n * @description\n * Add the specified number of days to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of days to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the days added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 10 days to 1 September 2014:\n * var result = addDays(new Date(2014, 8, 1), 10)\n * //=> Thu Sep 11 2014 00:00:00\n */\n\nexport default function addDays(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var amount = toInteger(dirtyAmount);\n\n  if (isNaN(amount)) {\n    return new Date(NaN);\n  }\n\n  if (!amount) {\n    // If 0 days, no-op to avoid changing times in the hour before end of DST\n    return date;\n  }\n\n  date.setDate(date.getDate() + amount);\n  return date;\n}","import toInteger from '../_lib/toInteger/index.js';\nimport toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name addMilliseconds\n * @category Millisecond Helpers\n * @summary Add the specified number of milliseconds to the given date.\n *\n * @description\n * Add the specified number of milliseconds to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of milliseconds to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the milliseconds added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 750 milliseconds to 10 July 2014 12:45:30.000:\n * var result = addMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)\n * //=> Thu Jul 10 2014 12:45:30.750\n */\n\nexport default function addMilliseconds(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var timestamp = toDate(dirtyDate).getTime();\n  var amount = toInteger(dirtyAmount);\n  return new Date(timestamp + amount);\n}","import toDate from '../toDate/index.js';\nimport toInteger from '../_lib/toInteger/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name startOfWeek\n * @category Week Helpers\n * @summary Return the start of a week for the given date.\n *\n * @description\n * Return the start of a week for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Date} the start of a week\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n *\n * @example\n * // The start of a week for 2 September 2014 11:55:00:\n * var result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sun Aug 31 2014 00:00:00\n *\n * @example\n * // If the week starts on Monday, the start of the week for 2 September 2014 11:55:00:\n * var result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\n * //=> Mon Sep 01 2014 00:00:00\n */\n\nexport default function startOfWeek(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  var date = toDate(dirtyDate);\n  var day = date.getDay();\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n  date.setDate(date.getDate() - diff);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import toInteger from '../_lib/toInteger/index.js';\nimport addMonths from '../addMonths/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name addYears\n * @category Year Helpers\n * @summary Add the specified number of years to the given date.\n *\n * @description\n * Add the specified number of years to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of years to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the years added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 5 years to 1 September 2014:\n * var result = addYears(new Date(2014, 8, 1), 5)\n * //=> Sun Sep 01 2019 00:00:00\n */\n\nexport default function addYears(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addMonths(dirtyDate, amount * 12);\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name endOfYear\n * @category Year Helpers\n * @summary Return the end of a year for the given date.\n *\n * @description\n * Return the end of a year for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the end of a year\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The end of a year for 2 September 2014 11:55:00:\n * var result = endOfYear(new Date(2014, 8, 2, 11, 55, 00))\n * //=> Wed Dec 31 2014 23:59:59.999\n */\n\nexport default function endOfYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getFullYear();\n  date.setFullYear(year + 1, 0, 0);\n  date.setHours(23, 59, 59, 999);\n  return date;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name startOfHour\n * @category Hour Helpers\n * @summary Return the start of an hour for the given date.\n *\n * @description\n * Return the start of an hour for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of an hour\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of an hour for 2 September 2014 11:55:00:\n * var result = startOfHour(new Date(2014, 8, 2, 11, 55))\n * //=> Tue Sep 02 2014 11:00:00\n */\n\nexport default function startOfHour(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setMinutes(0, 0, 0);\n  return date;\n}","import addDays from 'date-fns/addDays';\nimport addMonths from 'date-fns/addMonths';\nimport addYears from 'date-fns/addYears';\nimport differenceInMilliseconds from 'date-fns/differenceInMilliseconds';\nimport eachDayOfInterval from 'date-fns/eachDayOfInterval';\nimport endOfDay from 'date-fns/endOfDay';\nimport endOfWeek from 'date-fns/endOfWeek';\nimport endOfYear from 'date-fns/endOfYear';\nimport format from 'date-fns/format';\nimport getHours from 'date-fns/getHours';\nimport getSeconds from 'date-fns/getSeconds';\nimport getYear from 'date-fns/getYear';\nimport isAfter from 'date-fns/isAfter';\nimport isBefore from 'date-fns/isBefore';\nimport isEqual from 'date-fns/isEqual';\nimport isSameDay from 'date-fns/isSameDay';\nimport isSameYear from 'date-fns/isSameYear';\nimport isSameMonth from 'date-fns/isSameMonth';\nimport isSameHour from 'date-fns/isSameHour';\nimport isValid from 'date-fns/isValid';\nimport dateFnsParse from 'date-fns/parse';\nimport setHours from 'date-fns/setHours';\nimport setMinutes from 'date-fns/setMinutes';\nimport setMonth from 'date-fns/setMonth';\nimport setSeconds from 'date-fns/setSeconds';\nimport setYear from 'date-fns/setYear';\nimport startOfDay from 'date-fns/startOfDay';\nimport startOfMonth from 'date-fns/startOfMonth';\nimport endOfMonth from 'date-fns/endOfMonth';\nimport startOfWeek from 'date-fns/startOfWeek';\nimport startOfYear from 'date-fns/startOfYear';\n\nvar DateFnsUtils = /** @class */ (function () {\n    function DateFnsUtils(_a) {\n        var locale = (_a === void 0 ? {} : _a).locale;\n        this.yearFormat = \"yyyy\";\n        this.yearMonthFormat = \"MMMM yyyy\";\n        this.dateTime12hFormat = \"MMMM do hh:mm aaaa\";\n        this.dateTime24hFormat = \"MMMM do HH:mm\";\n        this.time12hFormat = \"hh:mm a\";\n        this.time24hFormat = \"HH:mm\";\n        this.dateFormat = \"MMMM do\";\n        this.locale = locale;\n    }\n    // Note: date-fns input types are more lenient than this adapter, so we need to expose our more\n    // strict signature and delegate to the more lenient signature. Otherwise, we have downstream type errors upon usage.\n    DateFnsUtils.prototype.addDays = function (value, count) {\n        return addDays(value, count);\n    };\n    DateFnsUtils.prototype.isValid = function (value) {\n        return isValid(this.date(value));\n    };\n    DateFnsUtils.prototype.getDiff = function (value, comparing) {\n        return differenceInMilliseconds(value, this.date(comparing));\n    };\n    DateFnsUtils.prototype.isAfter = function (value, comparing) {\n        return isAfter(value, comparing);\n    };\n    DateFnsUtils.prototype.isBefore = function (value, comparing) {\n        return isBefore(value, comparing);\n    };\n    DateFnsUtils.prototype.startOfDay = function (value) {\n        return startOfDay(value);\n    };\n    DateFnsUtils.prototype.endOfDay = function (value) {\n        return endOfDay(value);\n    };\n    DateFnsUtils.prototype.getHours = function (value) {\n        return getHours(value);\n    };\n    DateFnsUtils.prototype.setHours = function (value, count) {\n        return setHours(value, count);\n    };\n    DateFnsUtils.prototype.setMinutes = function (value, count) {\n        return setMinutes(value, count);\n    };\n    DateFnsUtils.prototype.getSeconds = function (value) {\n        return getSeconds(value);\n    };\n    DateFnsUtils.prototype.setSeconds = function (value, count) {\n        return setSeconds(value, count);\n    };\n    DateFnsUtils.prototype.isSameDay = function (value, comparing) {\n        return isSameDay(value, comparing);\n    };\n    DateFnsUtils.prototype.isSameMonth = function (value, comparing) {\n        return isSameMonth(value, comparing);\n    };\n    DateFnsUtils.prototype.isSameYear = function (value, comparing) {\n        return isSameYear(value, comparing);\n    };\n    DateFnsUtils.prototype.isSameHour = function (value, comparing) {\n        return isSameHour(value, comparing);\n    };\n    DateFnsUtils.prototype.startOfMonth = function (value) {\n        return startOfMonth(value);\n    };\n    DateFnsUtils.prototype.endOfMonth = function (value) {\n        return endOfMonth(value);\n    };\n    DateFnsUtils.prototype.getYear = function (value) {\n        return getYear(value);\n    };\n    DateFnsUtils.prototype.setYear = function (value, count) {\n        return setYear(value, count);\n    };\n    DateFnsUtils.prototype.date = function (value) {\n        if (typeof value === \"undefined\") {\n            return new Date();\n        }\n        if (value === null) {\n            return null;\n        }\n        return new Date(value);\n    };\n    DateFnsUtils.prototype.parse = function (value, formatString) {\n        if (value === \"\") {\n            return null;\n        }\n        return dateFnsParse(value, formatString, new Date(), { locale: this.locale });\n    };\n    DateFnsUtils.prototype.format = function (date, formatString) {\n        return format(date, formatString, { locale: this.locale });\n    };\n    DateFnsUtils.prototype.isEqual = function (date, comparing) {\n        if (date === null && comparing === null) {\n            return true;\n        }\n        return isEqual(date, comparing);\n    };\n    DateFnsUtils.prototype.isNull = function (date) {\n        return date === null;\n    };\n    DateFnsUtils.prototype.isAfterDay = function (date, value) {\n        return isAfter(date, endOfDay(value));\n    };\n    DateFnsUtils.prototype.isBeforeDay = function (date, value) {\n        return isBefore(date, startOfDay(value));\n    };\n    DateFnsUtils.prototype.isBeforeYear = function (date, value) {\n        return isBefore(date, startOfYear(value));\n    };\n    DateFnsUtils.prototype.isAfterYear = function (date, value) {\n        return isAfter(date, endOfYear(value));\n    };\n    DateFnsUtils.prototype.formatNumber = function (numberToFormat) {\n        return numberToFormat;\n    };\n    DateFnsUtils.prototype.getMinutes = function (date) {\n        return date.getMinutes();\n    };\n    DateFnsUtils.prototype.getMonth = function (date) {\n        return date.getMonth();\n    };\n    DateFnsUtils.prototype.setMonth = function (date, count) {\n        return setMonth(date, count);\n    };\n    DateFnsUtils.prototype.getMeridiemText = function (ampm) {\n        return ampm === \"am\" ? \"AM\" : \"PM\";\n    };\n    DateFnsUtils.prototype.getNextMonth = function (date) {\n        return addMonths(date, 1);\n    };\n    DateFnsUtils.prototype.getPreviousMonth = function (date) {\n        return addMonths(date, -1);\n    };\n    DateFnsUtils.prototype.getMonthArray = function (date) {\n        var firstMonth = startOfYear(date);\n        var monthArray = [firstMonth];\n        while (monthArray.length < 12) {\n            var prevMonth = monthArray[monthArray.length - 1];\n            monthArray.push(this.getNextMonth(prevMonth));\n        }\n        return monthArray;\n    };\n    DateFnsUtils.prototype.mergeDateAndTime = function (date, time) {\n        return this.setMinutes(this.setHours(date, this.getHours(time)), this.getMinutes(time));\n    };\n    DateFnsUtils.prototype.getWeekdays = function () {\n        var _this = this;\n        var now = new Date();\n        return eachDayOfInterval({\n            start: startOfWeek(now, { locale: this.locale }),\n            end: endOfWeek(now, { locale: this.locale })\n        }).map(function (day) { return _this.format(day, \"EEEEEE\"); });\n    };\n    DateFnsUtils.prototype.getWeekArray = function (date) {\n        var start = startOfWeek(startOfMonth(date), { locale: this.locale });\n        var end = endOfWeek(endOfMonth(date), { locale: this.locale });\n        var count = 0;\n        var current = start;\n        var nestedWeeks = [];\n        while (isBefore(current, end)) {\n            var weekNumber = Math.floor(count / 7);\n            nestedWeeks[weekNumber] = nestedWeeks[weekNumber] || [];\n            nestedWeeks[weekNumber].push(current);\n            current = addDays(current, 1);\n            count += 1;\n        }\n        return nestedWeeks;\n    };\n    DateFnsUtils.prototype.getYearRange = function (start, end) {\n        var startDate = startOfYear(start);\n        var endDate = endOfYear(end);\n        var years = [];\n        var current = startDate;\n        while (isBefore(current, endDate)) {\n            years.push(current);\n            current = addYears(current, 1);\n        }\n        return years;\n    };\n    // displaying methpds\n    DateFnsUtils.prototype.getCalendarHeaderText = function (date) {\n        return this.format(date, this.yearMonthFormat);\n    };\n    DateFnsUtils.prototype.getYearText = function (date) {\n        return this.format(date, \"yyyy\");\n    };\n    DateFnsUtils.prototype.getDatePickerHeaderText = function (date) {\n        return this.format(date, \"EEE, MMM d\");\n    };\n    DateFnsUtils.prototype.getDateTimePickerHeaderText = function (date) {\n        return this.format(date, \"MMM d\");\n    };\n    DateFnsUtils.prototype.getMonthText = function (date) {\n        return this.format(date, \"MMMM\");\n    };\n    DateFnsUtils.prototype.getDayText = function (date) {\n        return this.format(date, \"d\");\n    };\n    DateFnsUtils.prototype.getHourText = function (date, ampm) {\n        return this.format(date, ampm ? \"hh\" : \"HH\");\n    };\n    DateFnsUtils.prototype.getMinuteText = function (date) {\n        return this.format(date, \"mm\");\n    };\n    DateFnsUtils.prototype.getSecondText = function (date) {\n        return this.format(date, \"ss\");\n    };\n    return DateFnsUtils;\n}());\n\nexport default DateFnsUtils;\n","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name differenceInMilliseconds\n * @category Millisecond Helpers\n * @summary Get the number of milliseconds between the given dates.\n *\n * @description\n * Get the number of milliseconds between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of milliseconds\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many milliseconds are between\n * // 2 July 2014 12:30:20.600 and 2 July 2014 12:30:21.700?\n * var result = differenceInMilliseconds(\n *   new Date(2014, 6, 2, 12, 30, 21, 700),\n *   new Date(2014, 6, 2, 12, 30, 20, 600)\n * )\n * //=> 1100\n */\n\nexport default function differenceInMilliseconds(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  return dateLeft.getTime() - dateRight.getTime();\n}","import startOfHour from '../startOfHour/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isSameHour\n * @category Hour Helpers\n * @summary Are the given dates in the same hour?\n *\n * @description\n * Are the given dates in the same hour?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to check\n * @param {Date|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same hour\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Are 4 September 2014 06:00:00 and 4 September 06:30:00 in the same hour?\n * var result = isSameHour(new Date(2014, 8, 4, 6, 0), new Date(2014, 8, 4, 6, 30))\n * //=> true\n */\n\nexport default function isSameHour(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeftStartOfHour = startOfHour(dirtyDateLeft);\n  var dateRightStartOfHour = startOfHour(dirtyDateRight);\n  return dateLeftStartOfHour.getTime() === dateRightStartOfHour.getTime();\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name eachDayOfInterval\n * @category Interval Helpers\n * @summary Return the array of dates within the specified time interval.\n *\n * @description\n * Return the array of dates within the specified time interval.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `eachDay` to `eachDayOfInterval`.\n *   This change was made to mirror the use of the word \"interval\" in standard ISO 8601:2004 terminology:\n *\n *   ```\n *   2.1.3\n *   time interval\n *   part of the time axis limited by two instants\n *   ```\n *\n *   Also, this function now accepts an object with `start` and `end` properties\n *   instead of two arguments as an interval.\n *   This function now throws `RangeError` if the start of the interval is after its end\n *   or if any date in the interval is `Invalid Date`.\n *\n *   ```javascript\n *   // Before v2.0.0\n *\n *   eachDay(new Date(2014, 0, 10), new Date(2014, 0, 20))\n *\n *   // v2.0.0 onward\n *\n *   eachDayOfInterval(\n *     { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) }\n *   )\n *   ```\n *\n * @param {Interval} interval - the interval. See [Interval]{@link docs/types/Interval}\n * @param {Object} [options] - an object with options.\n * @param {Number} [options.step=1] - the step to increment by. The value should be more than 1.\n * @returns {Date[]} the array with starts of days from the day of the interval start to the day of the interval end\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.step` must be a number greater than 1\n * @throws {RangeError} The start of an interval cannot be after its end\n * @throws {RangeError} Date in interval cannot be `Invalid Date`\n *\n * @example\n * // Each day between 6 October 2014 and 10 October 2014:\n * var result = eachDayOfInterval({\n *   start: new Date(2014, 9, 6),\n *   end: new Date(2014, 9, 10)\n * })\n * //=> [\n * //   Mon Oct 06 2014 00:00:00,\n * //   Tue Oct 07 2014 00:00:00,\n * //   Wed Oct 08 2014 00:00:00,\n * //   Thu Oct 09 2014 00:00:00,\n * //   Fri Oct 10 2014 00:00:00\n * // ]\n */\n\nexport default function eachDayOfInterval(dirtyInterval, options) {\n  requiredArgs(1, arguments);\n  var interval = dirtyInterval || {};\n  var startDate = toDate(interval.start);\n  var endDate = toDate(interval.end);\n  var endTime = endDate.getTime(); // Throw an exception if start date is after end date or if any date is `Invalid Date`\n\n  if (!(startDate.getTime() <= endTime)) {\n    throw new RangeError('Invalid interval');\n  }\n\n  var dates = [];\n  var currentDate = startDate;\n  currentDate.setHours(0, 0, 0, 0);\n  var step = options && 'step' in options ? Number(options.step) : 1;\n  if (step < 1 || isNaN(step)) throw new RangeError('`options.step` must be a number greater than 1');\n\n  while (currentDate.getTime() <= endTime) {\n    dates.push(toDate(currentDate));\n    currentDate.setDate(currentDate.getDate() + step);\n    currentDate.setHours(0, 0, 0, 0);\n  }\n\n  return dates;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name getDaysInMonth\n * @category Month Helpers\n * @summary Get the number of days in a month of the given date.\n *\n * @description\n * Get the number of days in a month of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the number of days in a month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // How many days are in February 2000?\n * var result = getDaysInMonth(new Date(2000, 1))\n * //=> 29\n */\n\nexport default function getDaysInMonth(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getFullYear();\n  var monthIndex = date.getMonth();\n  var lastDayOfMonth = new Date(0);\n  lastDayOfMonth.setFullYear(year, monthIndex + 1, 0);\n  lastDayOfMonth.setHours(0, 0, 0, 0);\n  return lastDayOfMonth.getDate();\n}","import toInteger from '../_lib/toInteger/index.js';\nimport toDate from '../toDate/index.js';\nimport getDaysInMonth from '../getDaysInMonth/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name setMonth\n * @category Month Helpers\n * @summary Set the month to the given date.\n *\n * @description\n * Set the month to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} month - the month of the new date\n * @returns {Date} the new date with the month set\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Set February to 1 September 2014:\n * var result = setMonth(new Date(2014, 8, 1), 1)\n * //=> Sat Feb 01 2014 00:00:00\n */\n\nexport default function setMonth(dirtyDate, dirtyMonth) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var month = toInteger(dirtyMonth);\n  var year = date.getFullYear();\n  var day = date.getDate();\n  var dateWithDesiredMonth = new Date(0);\n  dateWithDesiredMonth.setFullYear(year, month, 15);\n  dateWithDesiredMonth.setHours(0, 0, 0, 0);\n  var daysInMonth = getDaysInMonth(dateWithDesiredMonth); // Set the last day of the new month\n  // if the original date was the last day of the longer month\n\n  date.setMonth(month, Math.min(day, daysInMonth));\n  return date;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isAfter\n * @category Common Helpers\n * @summary Is the first date after the second one?\n *\n * @description\n * Is the first date after the second one?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date that should be after the other one to return true\n * @param {Date|Number} dateToCompare - the date to compare with\n * @returns {Boolean} the first date is after the second date\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Is 10 July 1989 after 11 February 1987?\n * var result = isAfter(new Date(1989, 6, 10), new Date(1987, 1, 11))\n * //=> true\n */\n\nexport default function isAfter(dirtyDate, dirtyDateToCompare) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var dateToCompare = toDate(dirtyDateToCompare);\n  return date.getTime() > dateToCompare.getTime();\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isBefore\n * @category Common Helpers\n * @summary Is the first date before the second one?\n *\n * @description\n * Is the first date before the second one?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date that should be before the other one to return true\n * @param {Date|Number} dateToCompare - the date to compare with\n * @returns {Boolean} the first date is before the second date\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Is 10 July 1989 before 11 February 1987?\n * var result = isBefore(new Date(1989, 6, 10), new Date(1987, 1, 11))\n * //=> false\n */\n\nexport default function isBefore(dirtyDate, dirtyDateToCompare) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var dateToCompare = toDate(dirtyDateToCompare);\n  return date.getTime() < dateToCompare.getTime();\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name endOfDay\n * @category Day Helpers\n * @summary Return the end of a day for the given date.\n *\n * @description\n * Return the end of a day for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the end of a day\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The end of a day for 2 September 2014 11:55:00:\n * var result = endOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 23:59:59.999\n */\n\nexport default function endOfDay(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setHours(23, 59, 59, 999);\n  return date;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name getHours\n * @category Hour Helpers\n * @summary Get the hours of the given date.\n *\n * @description\n * Get the hours of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the hours\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Get the hours of 29 February 2012 11:45:00:\n * var result = getHours(new Date(2012, 1, 29, 11, 45))\n * //=> 11\n */\n\nexport default function getHours(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var hours = date.getHours();\n  return hours;\n}","import toInteger from '../_lib/toInteger/index.js';\nimport toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name setHours\n * @category Hour Helpers\n * @summary Set the hours to the given date.\n *\n * @description\n * Set the hours to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} hours - the hours of the new date\n * @returns {Date} the new date with the hours set\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Set 4 hours to 1 September 2014 11:30:00:\n * var result = setHours(new Date(2014, 8, 1, 11, 30), 4)\n * //=> Mon Sep 01 2014 04:30:00\n */\n\nexport default function setHours(dirtyDate, dirtyHours) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var hours = toInteger(dirtyHours);\n  date.setHours(hours);\n  return date;\n}","import toInteger from '../_lib/toInteger/index.js';\nimport toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name setMinutes\n * @category Minute Helpers\n * @summary Set the minutes to the given date.\n *\n * @description\n * Set the minutes to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} minutes - the minutes of the new date\n * @returns {Date} the new date with the minutes set\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Set 45 minutes to 1 September 2014 11:30:40:\n * var result = setMinutes(new Date(2014, 8, 1, 11, 30, 40), 45)\n * //=> Mon Sep 01 2014 11:45:40\n */\n\nexport default function setMinutes(dirtyDate, dirtyMinutes) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var minutes = toInteger(dirtyMinutes);\n  date.setMinutes(minutes);\n  return date;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name getSeconds\n * @category Second Helpers\n * @summary Get the seconds of the given date.\n *\n * @description\n * Get the seconds of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the seconds\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Get the seconds of 29 February 2012 11:45:05.123:\n * var result = getSeconds(new Date(2012, 1, 29, 11, 45, 5, 123))\n * //=> 5\n */\n\nexport default function getSeconds(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var seconds = date.getSeconds();\n  return seconds;\n}","import toInteger from '../_lib/toInteger/index.js';\nimport toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name setSeconds\n * @category Second Helpers\n * @summary Set the seconds to the given date.\n *\n * @description\n * Set the seconds to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} seconds - the seconds of the new date\n * @returns {Date} the new date with the seconds set\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Set 45 seconds to 1 September 2014 11:30:40:\n * var result = setSeconds(new Date(2014, 8, 1, 11, 30, 40), 45)\n * //=> Mon Sep 01 2014 11:30:45\n */\n\nexport default function setSeconds(dirtyDate, dirtySeconds) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var seconds = toInteger(dirtySeconds);\n  date.setSeconds(seconds);\n  return date;\n}","import startOfDay from '../startOfDay/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isSameDay\n * @category Day Helpers\n * @summary Are the given dates in the same day?\n *\n * @description\n * Are the given dates in the same day?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to check\n * @param {Date|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same day\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Are 4 September 06:00:00 and 4 September 18:00:00 in the same day?\n * var result = isSameDay(new Date(2014, 8, 4, 6, 0), new Date(2014, 8, 4, 18, 0))\n * //=> true\n */\n\nexport default function isSameDay(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeftStartOfDay = startOfDay(dirtyDateLeft);\n  var dateRightStartOfDay = startOfDay(dirtyDateRight);\n  return dateLeftStartOfDay.getTime() === dateRightStartOfDay.getTime();\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isSameMonth\n * @category Month Helpers\n * @summary Are the given dates in the same month?\n *\n * @description\n * Are the given dates in the same month?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to check\n * @param {Date|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same month\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Are 2 September 2014 and 25 September 2014 in the same month?\n * var result = isSameMonth(new Date(2014, 8, 2), new Date(2014, 8, 25))\n * //=> true\n */\n\nexport default function isSameMonth(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  return dateLeft.getFullYear() === dateRight.getFullYear() && dateLeft.getMonth() === dateRight.getMonth();\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isSameYear\n * @category Year Helpers\n * @summary Are the given dates in the same year?\n *\n * @description\n * Are the given dates in the same year?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to check\n * @param {Date|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same year\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Are 2 September 2014 and 25 September 2014 in the same year?\n * var result = isSameYear(new Date(2014, 8, 2), new Date(2014, 8, 25))\n * //=> true\n */\n\nexport default function isSameYear(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  return dateLeft.getFullYear() === dateRight.getFullYear();\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name startOfMonth\n * @category Month Helpers\n * @summary Return the start of a month for the given date.\n *\n * @description\n * Return the start of a month for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of a month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of a month for 2 September 2014 11:55:00:\n * var result = startOfMonth(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Mon Sep 01 2014 00:00:00\n */\n\nexport default function startOfMonth(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name endOfMonth\n * @category Month Helpers\n * @summary Return the end of a month for the given date.\n *\n * @description\n * Return the end of a month for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the end of a month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The end of a month for 2 September 2014 11:55:00:\n * var result = endOfMonth(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 30 2014 23:59:59.999\n */\n\nexport default function endOfMonth(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var month = date.getMonth();\n  date.setFullYear(date.getFullYear(), month + 1, 0);\n  date.setHours(23, 59, 59, 999);\n  return date;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name getYear\n * @category Year Helpers\n * @summary Get the year of the given date.\n *\n * @description\n * Get the year of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the year\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Which year is 2 July 2014?\n * var result = getYear(new Date(2014, 6, 2))\n * //=> 2014\n */\n\nexport default function getYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getFullYear();\n  return year;\n}","import toInteger from '../_lib/toInteger/index.js';\nimport toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name setYear\n * @category Year Helpers\n * @summary Set the year to the given date.\n *\n * @description\n * Set the year to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} year - the year of the new date\n * @returns {Date} the new date with the year set\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Set year 2013 to 1 September 2014:\n * var result = setYear(new Date(2014, 8, 1), 2013)\n * //=> Sun Sep 01 2013 00:00:00\n */\n\nexport default function setYear(dirtyDate, dirtyYear) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var year = toInteger(dirtyYear); // Check if date is Invalid Date because Date.prototype.setFullYear ignores the value of Invalid Date\n\n  if (isNaN(date)) {\n    return new Date(NaN);\n  }\n\n  date.setFullYear(year);\n  return date;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isEqual\n * @category Common Helpers\n * @summary Are the given dates equal?\n *\n * @description\n * Are the given dates equal?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to compare\n * @param {Date|Number} dateRight - the second date to compare\n * @returns {Boolean} the dates are equal\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Are 2 July 2014 06:30:45.000 and 2 July 2014 06:30:45.500 equal?\n * var result = isEqual(\n *   new Date(2014, 6, 2, 6, 30, 45, 0),\n *   new Date(2014, 6, 2, 6, 30, 45, 500)\n * )\n * //=> false\n */\n\nexport default function isEqual(dirtyLeftDate, dirtyRightDate) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyLeftDate);\n  var dateRight = toDate(dirtyRightDate);\n  return dateLeft.getTime() === dateRight.getTime();\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name startOfYear\n * @category Year Helpers\n * @summary Return the start of a year for the given date.\n *\n * @description\n * Return the start of a year for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of a year\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of a year for 2 September 2014 11:55:00:\n * var result = startOfYear(new Date(2014, 8, 2, 11, 55, 00))\n * //=> Wed Jan 01 2014 00:00:00\n */\n\nexport default function startOfYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var cleanDate = toDate(dirtyDate);\n  var date = new Date(0);\n  date.setFullYear(cleanDate.getFullYear(), 0, 1);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import toDate from '../toDate/index.js';\nimport toInteger from '../_lib/toInteger/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name endOfWeek\n * @category Week Helpers\n * @summary Return the end of a week for the given date.\n *\n * @description\n * Return the end of a week for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Date} the end of a week\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n *\n * @example\n * // The end of a week for 2 September 2014 11:55:00:\n * var result = endOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sat Sep 06 2014 23:59:59.999\n *\n * @example\n * // If the week starts on Monday, the end of the week for 2 September 2014 11:55:00:\n * var result = endOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\n * //=> Sun Sep 07 2014 23:59:59.999\n */\n\nexport default function endOfWeek(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  var date = toDate(dirtyDate);\n  var day = date.getDay();\n  var diff = (day < weekStartsOn ? -7 : 0) + 6 - (day - weekStartsOn);\n  date.setDate(date.getDate() + diff);\n  date.setHours(23, 59, 59, 999);\n  return date;\n}","export default function assign(target, dirtyObject) {\n  if (target == null) {\n    throw new TypeError('assign requires that input parameter not be null or undefined');\n  }\n\n  dirtyObject = dirtyObject || {};\n\n  for (var property in dirtyObject) {\n    if (dirtyObject.hasOwnProperty(property)) {\n      target[property] = dirtyObject[property];\n    }\n  }\n\n  return target;\n}","import toInteger from '../toInteger/index.js';\nimport toDate from '../../toDate/index.js';\nimport requiredArgs from '../requiredArgs/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function setUTCDay(dirtyDate, dirtyDay, dirtyOptions) {\n  requiredArgs(2, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  var date = toDate(dirtyDate);\n  var day = toInteger(dirtyDay);\n  var currentDay = date.getUTCDay();\n  var remainder = day % 7;\n  var dayIndex = (remainder + 7) % 7;\n  var diff = (dayIndex < weekStartsOn ? 7 : 0) + day - currentDay;\n  date.setUTCDate(date.getUTCDate() + diff);\n  return date;\n}","import getUTCWeekYear from '../../../_lib/getUTCWeekYear/index.js';\nimport setUTCDay from '../../../_lib/setUTCDay/index.js';\nimport setUTCISODay from '../../../_lib/setUTCISODay/index.js';\nimport setUTCISOWeek from '../../../_lib/setUTCISOWeek/index.js';\nimport setUTCWeek from '../../../_lib/setUTCWeek/index.js';\nimport startOfUTCISOWeek from '../../../_lib/startOfUTCISOWeek/index.js';\nimport startOfUTCWeek from '../../../_lib/startOfUTCWeek/index.js';\nvar MILLISECONDS_IN_HOUR = 3600000;\nvar MILLISECONDS_IN_MINUTE = 60000;\nvar MILLISECONDS_IN_SECOND = 1000;\nvar numericPatterns = {\n  month: /^(1[0-2]|0?\\d)/,\n  // 0 to 12\n  date: /^(3[0-1]|[0-2]?\\d)/,\n  // 0 to 31\n  dayOfYear: /^(36[0-6]|3[0-5]\\d|[0-2]?\\d?\\d)/,\n  // 0 to 366\n  week: /^(5[0-3]|[0-4]?\\d)/,\n  // 0 to 53\n  hour23h: /^(2[0-3]|[0-1]?\\d)/,\n  // 0 to 23\n  hour24h: /^(2[0-4]|[0-1]?\\d)/,\n  // 0 to 24\n  hour11h: /^(1[0-1]|0?\\d)/,\n  // 0 to 11\n  hour12h: /^(1[0-2]|0?\\d)/,\n  // 0 to 12\n  minute: /^[0-5]?\\d/,\n  // 0 to 59\n  second: /^[0-5]?\\d/,\n  // 0 to 59\n  singleDigit: /^\\d/,\n  // 0 to 9\n  twoDigits: /^\\d{1,2}/,\n  // 0 to 99\n  threeDigits: /^\\d{1,3}/,\n  // 0 to 999\n  fourDigits: /^\\d{1,4}/,\n  // 0 to 9999\n  anyDigitsSigned: /^-?\\d+/,\n  singleDigitSigned: /^-?\\d/,\n  // 0 to 9, -0 to -9\n  twoDigitsSigned: /^-?\\d{1,2}/,\n  // 0 to 99, -0 to -99\n  threeDigitsSigned: /^-?\\d{1,3}/,\n  // 0 to 999, -0 to -999\n  fourDigitsSigned: /^-?\\d{1,4}/ // 0 to 9999, -0 to -9999\n\n};\nvar timezonePatterns = {\n  basicOptionalMinutes: /^([+-])(\\d{2})(\\d{2})?|Z/,\n  basic: /^([+-])(\\d{2})(\\d{2})|Z/,\n  basicOptionalSeconds: /^([+-])(\\d{2})(\\d{2})((\\d{2}))?|Z/,\n  extended: /^([+-])(\\d{2}):(\\d{2})|Z/,\n  extendedOptionalSeconds: /^([+-])(\\d{2}):(\\d{2})(:(\\d{2}))?|Z/\n};\n\nfunction parseNumericPattern(pattern, string, valueCallback) {\n  var matchResult = string.match(pattern);\n\n  if (!matchResult) {\n    return null;\n  }\n\n  var value = parseInt(matchResult[0], 10);\n  return {\n    value: valueCallback ? valueCallback(value) : value,\n    rest: string.slice(matchResult[0].length)\n  };\n}\n\nfunction parseTimezonePattern(pattern, string) {\n  var matchResult = string.match(pattern);\n\n  if (!matchResult) {\n    return null;\n  } // Input is 'Z'\n\n\n  if (matchResult[0] === 'Z') {\n    return {\n      value: 0,\n      rest: string.slice(1)\n    };\n  }\n\n  var sign = matchResult[1] === '+' ? 1 : -1;\n  var hours = matchResult[2] ? parseInt(matchResult[2], 10) : 0;\n  var minutes = matchResult[3] ? parseInt(matchResult[3], 10) : 0;\n  var seconds = matchResult[5] ? parseInt(matchResult[5], 10) : 0;\n  return {\n    value: sign * (hours * MILLISECONDS_IN_HOUR + minutes * MILLISECONDS_IN_MINUTE + seconds * MILLISECONDS_IN_SECOND),\n    rest: string.slice(matchResult[0].length)\n  };\n}\n\nfunction parseAnyDigitsSigned(string, valueCallback) {\n  return parseNumericPattern(numericPatterns.anyDigitsSigned, string, valueCallback);\n}\n\nfunction parseNDigits(n, string, valueCallback) {\n  switch (n) {\n    case 1:\n      return parseNumericPattern(numericPatterns.singleDigit, string, valueCallback);\n\n    case 2:\n      return parseNumericPattern(numericPatterns.twoDigits, string, valueCallback);\n\n    case 3:\n      return parseNumericPattern(numericPatterns.threeDigits, string, valueCallback);\n\n    case 4:\n      return parseNumericPattern(numericPatterns.fourDigits, string, valueCallback);\n\n    default:\n      return parseNumericPattern(new RegExp('^\\\\d{1,' + n + '}'), string, valueCallback);\n  }\n}\n\nfunction parseNDigitsSigned(n, string, valueCallback) {\n  switch (n) {\n    case 1:\n      return parseNumericPattern(numericPatterns.singleDigitSigned, string, valueCallback);\n\n    case 2:\n      return parseNumericPattern(numericPatterns.twoDigitsSigned, string, valueCallback);\n\n    case 3:\n      return parseNumericPattern(numericPatterns.threeDigitsSigned, string, valueCallback);\n\n    case 4:\n      return parseNumericPattern(numericPatterns.fourDigitsSigned, string, valueCallback);\n\n    default:\n      return parseNumericPattern(new RegExp('^-?\\\\d{1,' + n + '}'), string, valueCallback);\n  }\n}\n\nfunction dayPeriodEnumToHours(enumValue) {\n  switch (enumValue) {\n    case 'morning':\n      return 4;\n\n    case 'evening':\n      return 17;\n\n    case 'pm':\n    case 'noon':\n    case 'afternoon':\n      return 12;\n\n    case 'am':\n    case 'midnight':\n    case 'night':\n    default:\n      return 0;\n  }\n}\n\nfunction normalizeTwoDigitYear(twoDigitYear, currentYear) {\n  var isCommonEra = currentYear > 0; // Absolute number of the current year:\n  // 1 -> 1 AC\n  // 0 -> 1 BC\n  // -1 -> 2 BC\n\n  var absCurrentYear = isCommonEra ? currentYear : 1 - currentYear;\n  var result;\n\n  if (absCurrentYear <= 50) {\n    result = twoDigitYear || 100;\n  } else {\n    var rangeEnd = absCurrentYear + 50;\n    var rangeEndCentury = Math.floor(rangeEnd / 100) * 100;\n    var isPreviousCentury = twoDigitYear >= rangeEnd % 100;\n    result = twoDigitYear + rangeEndCentury - (isPreviousCentury ? 100 : 0);\n  }\n\n  return isCommonEra ? result : 1 - result;\n}\n\nvar DAYS_IN_MONTH = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\nvar DAYS_IN_MONTH_LEAP_YEAR = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]; // User for validation\n\nfunction isLeapYearIndex(year) {\n  return year % 400 === 0 || year % 4 === 0 && year % 100 !== 0;\n}\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n * |  d  | Day of month                   |  D  | Day of year                    |\n * |  e  | Local day of week              |  E  | Day of week                    |\n * |  f  |                                |  F* | Day of week in month           |\n * |  g* | Modified Julian day            |  G  | Era                            |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  i! | ISO day of week                |  I! | ISO week of year               |\n * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n * |  m  | Minute                         |  M  | Month                          |\n * |  n  |                                |  N  |                                |\n * |  o! | Ordinal number modifier        |  O* | Timezone (GMT)                 |\n * |  p  |                                |  P  |                                |\n * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n * |  u  | Extended year                  |  U* | Cyclic year                    |\n * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n * |  w  | Local week of year             |  W* | Week of month                  |\n * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n * |  z* | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n *\n * Letters marked by ! are non-standard, but implemented by date-fns:\n * - `o` modifies the previous token to turn it into an ordinal (see `parse` docs)\n * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n *   i.e. 7 for Sunday, 1 for Monday, etc.\n * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n *   `R` is supposed to be used in conjunction with `I` and `i`\n *   for universal ISO week-numbering date, whereas\n *   `Y` is supposed to be used in conjunction with `w` and `e`\n *   for week-numbering date specific to the locale.\n */\n\n\nvar parsers = {\n  // Era\n  G: {\n    priority: 140,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        // AD, BC\n        case 'G':\n        case 'GG':\n        case 'GGG':\n          return match.era(string, {\n            width: 'abbreviated'\n          }) || match.era(string, {\n            width: 'narrow'\n          });\n        // A, B\n\n        case 'GGGGG':\n          return match.era(string, {\n            width: 'narrow'\n          });\n        // Anno Domini, Before Christ\n\n        case 'GGGG':\n        default:\n          return match.era(string, {\n            width: 'wide'\n          }) || match.era(string, {\n            width: 'abbreviated'\n          }) || match.era(string, {\n            width: 'narrow'\n          });\n      }\n    },\n    set: function (date, flags, value, _options) {\n      flags.era = value;\n      date.setUTCFullYear(value, 0, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['R', 'u', 't', 'T']\n  },\n  // Year\n  y: {\n    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_Patterns\n    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n    // |----------|-------|----|-------|-------|-------|\n    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\n    priority: 130,\n    parse: function (string, token, match, _options) {\n      var valueCallback = function (year) {\n        return {\n          year: year,\n          isTwoDigitYear: token === 'yy'\n        };\n      };\n\n      switch (token) {\n        case 'y':\n          return parseNDigits(4, string, valueCallback);\n\n        case 'yo':\n          return match.ordinalNumber(string, {\n            unit: 'year',\n            valueCallback: valueCallback\n          });\n\n        default:\n          return parseNDigits(token.length, string, valueCallback);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value.isTwoDigitYear || value.year > 0;\n    },\n    set: function (date, flags, value, _options) {\n      var currentYear = date.getUTCFullYear();\n\n      if (value.isTwoDigitYear) {\n        var normalizedTwoDigitYear = normalizeTwoDigitYear(value.year, currentYear);\n        date.setUTCFullYear(normalizedTwoDigitYear, 0, 1);\n        date.setUTCHours(0, 0, 0, 0);\n        return date;\n      }\n\n      var year = !('era' in flags) || flags.era === 1 ? value.year : 1 - value.year;\n      date.setUTCFullYear(year, 0, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'u', 'w', 'I', 'i', 'e', 'c', 't', 'T']\n  },\n  // Local week-numbering year\n  Y: {\n    priority: 130,\n    parse: function (string, token, match, _options) {\n      var valueCallback = function (year) {\n        return {\n          year: year,\n          isTwoDigitYear: token === 'YY'\n        };\n      };\n\n      switch (token) {\n        case 'Y':\n          return parseNDigits(4, string, valueCallback);\n\n        case 'Yo':\n          return match.ordinalNumber(string, {\n            unit: 'year',\n            valueCallback: valueCallback\n          });\n\n        default:\n          return parseNDigits(token.length, string, valueCallback);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value.isTwoDigitYear || value.year > 0;\n    },\n    set: function (date, flags, value, options) {\n      var currentYear = getUTCWeekYear(date, options);\n\n      if (value.isTwoDigitYear) {\n        var normalizedTwoDigitYear = normalizeTwoDigitYear(value.year, currentYear);\n        date.setUTCFullYear(normalizedTwoDigitYear, 0, options.firstWeekContainsDate);\n        date.setUTCHours(0, 0, 0, 0);\n        return startOfUTCWeek(date, options);\n      }\n\n      var year = !('era' in flags) || flags.era === 1 ? value.year : 1 - value.year;\n      date.setUTCFullYear(year, 0, options.firstWeekContainsDate);\n      date.setUTCHours(0, 0, 0, 0);\n      return startOfUTCWeek(date, options);\n    },\n    incompatibleTokens: ['y', 'R', 'u', 'Q', 'q', 'M', 'L', 'I', 'd', 'D', 'i', 't', 'T']\n  },\n  // ISO week-numbering year\n  R: {\n    priority: 130,\n    parse: function (string, token, _match, _options) {\n      if (token === 'R') {\n        return parseNDigitsSigned(4, string);\n      }\n\n      return parseNDigitsSigned(token.length, string);\n    },\n    set: function (_date, _flags, value, _options) {\n      var firstWeekOfYear = new Date(0);\n      firstWeekOfYear.setUTCFullYear(value, 0, 4);\n      firstWeekOfYear.setUTCHours(0, 0, 0, 0);\n      return startOfUTCISOWeek(firstWeekOfYear);\n    },\n    incompatibleTokens: ['G', 'y', 'Y', 'u', 'Q', 'q', 'M', 'L', 'w', 'd', 'D', 'e', 'c', 't', 'T']\n  },\n  // Extended year\n  u: {\n    priority: 130,\n    parse: function (string, token, _match, _options) {\n      if (token === 'u') {\n        return parseNDigitsSigned(4, string);\n      }\n\n      return parseNDigitsSigned(token.length, string);\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCFullYear(value, 0, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['G', 'y', 'Y', 'R', 'w', 'I', 'i', 'e', 'c', 't', 'T']\n  },\n  // Quarter\n  Q: {\n    priority: 120,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        // 1, 2, 3, 4\n        case 'Q':\n        case 'QQ':\n          // 01, 02, 03, 04\n          return parseNDigits(token.length, string);\n        // 1st, 2nd, 3rd, 4th\n\n        case 'Qo':\n          return match.ordinalNumber(string, {\n            unit: 'quarter'\n          });\n        // Q1, Q2, Q3, Q4\n\n        case 'QQQ':\n          return match.quarter(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.quarter(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n\n        case 'QQQQQ':\n          return match.quarter(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // 1st quarter, 2nd quarter, ...\n\n        case 'QQQQ':\n        default:\n          return match.quarter(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.quarter(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.quarter(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 4;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMonth((value - 1) * 3, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'q', 'M', 'L', 'w', 'I', 'd', 'D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Stand-alone quarter\n  q: {\n    priority: 120,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        // 1, 2, 3, 4\n        case 'q':\n        case 'qq':\n          // 01, 02, 03, 04\n          return parseNDigits(token.length, string);\n        // 1st, 2nd, 3rd, 4th\n\n        case 'qo':\n          return match.ordinalNumber(string, {\n            unit: 'quarter'\n          });\n        // Q1, Q2, Q3, Q4\n\n        case 'qqq':\n          return match.quarter(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.quarter(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n\n        case 'qqqqq':\n          return match.quarter(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // 1st quarter, 2nd quarter, ...\n\n        case 'qqqq':\n        default:\n          return match.quarter(string, {\n            width: 'wide',\n            context: 'standalone'\n          }) || match.quarter(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.quarter(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 4;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMonth((value - 1) * 3, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'Q', 'M', 'L', 'w', 'I', 'd', 'D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Month\n  M: {\n    priority: 110,\n    parse: function (string, token, match, _options) {\n      var valueCallback = function (value) {\n        return value - 1;\n      };\n\n      switch (token) {\n        // 1, 2, ..., 12\n        case 'M':\n          return parseNumericPattern(numericPatterns.month, string, valueCallback);\n        // 01, 02, ..., 12\n\n        case 'MM':\n          return parseNDigits(2, string, valueCallback);\n        // 1st, 2nd, ..., 12th\n\n        case 'Mo':\n          return match.ordinalNumber(string, {\n            unit: 'month',\n            valueCallback: valueCallback\n          });\n        // Jan, Feb, ..., Dec\n\n        case 'MMM':\n          return match.month(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.month(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // J, F, ..., D\n\n        case 'MMMMM':\n          return match.month(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // January, February, ..., December\n\n        case 'MMMM':\n        default:\n          return match.month(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.month(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.month(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 11;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMonth(value, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'q', 'Q', 'L', 'w', 'I', 'D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Stand-alone month\n  L: {\n    priority: 110,\n    parse: function (string, token, match, _options) {\n      var valueCallback = function (value) {\n        return value - 1;\n      };\n\n      switch (token) {\n        // 1, 2, ..., 12\n        case 'L':\n          return parseNumericPattern(numericPatterns.month, string, valueCallback);\n        // 01, 02, ..., 12\n\n        case 'LL':\n          return parseNDigits(2, string, valueCallback);\n        // 1st, 2nd, ..., 12th\n\n        case 'Lo':\n          return match.ordinalNumber(string, {\n            unit: 'month',\n            valueCallback: valueCallback\n          });\n        // Jan, Feb, ..., Dec\n\n        case 'LLL':\n          return match.month(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.month(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // J, F, ..., D\n\n        case 'LLLLL':\n          return match.month(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // January, February, ..., December\n\n        case 'LLLL':\n        default:\n          return match.month(string, {\n            width: 'wide',\n            context: 'standalone'\n          }) || match.month(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.month(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 11;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMonth(value, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'q', 'Q', 'M', 'w', 'I', 'D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Local week of year\n  w: {\n    priority: 100,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'w':\n          return parseNumericPattern(numericPatterns.week, string);\n\n        case 'wo':\n          return match.ordinalNumber(string, {\n            unit: 'week'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 53;\n    },\n    set: function (date, _flags, value, options) {\n      return startOfUTCWeek(setUTCWeek(date, value, options), options);\n    },\n    incompatibleTokens: ['y', 'R', 'u', 'q', 'Q', 'M', 'L', 'I', 'd', 'D', 'i', 't', 'T']\n  },\n  // ISO week of year\n  I: {\n    priority: 100,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'I':\n          return parseNumericPattern(numericPatterns.week, string);\n\n        case 'Io':\n          return match.ordinalNumber(string, {\n            unit: 'week'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 53;\n    },\n    set: function (date, _flags, value, options) {\n      return startOfUTCISOWeek(setUTCISOWeek(date, value, options), options);\n    },\n    incompatibleTokens: ['y', 'Y', 'u', 'q', 'Q', 'M', 'L', 'w', 'd', 'D', 'e', 'c', 't', 'T']\n  },\n  // Day of the month\n  d: {\n    priority: 90,\n    subPriority: 1,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'd':\n          return parseNumericPattern(numericPatterns.date, string);\n\n        case 'do':\n          return match.ordinalNumber(string, {\n            unit: 'date'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (date, value, _options) {\n      var year = date.getUTCFullYear();\n      var isLeapYear = isLeapYearIndex(year);\n      var month = date.getUTCMonth();\n\n      if (isLeapYear) {\n        return value >= 1 && value <= DAYS_IN_MONTH_LEAP_YEAR[month];\n      } else {\n        return value >= 1 && value <= DAYS_IN_MONTH[month];\n      }\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCDate(value);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'q', 'Q', 'w', 'I', 'D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Day of year\n  D: {\n    priority: 90,\n    subPriority: 1,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'D':\n        case 'DD':\n          return parseNumericPattern(numericPatterns.dayOfYear, string);\n\n        case 'Do':\n          return match.ordinalNumber(string, {\n            unit: 'date'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (date, value, _options) {\n      var year = date.getUTCFullYear();\n      var isLeapYear = isLeapYearIndex(year);\n\n      if (isLeapYear) {\n        return value >= 1 && value <= 366;\n      } else {\n        return value >= 1 && value <= 365;\n      }\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMonth(0, value);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'q', 'Q', 'M', 'L', 'w', 'I', 'd', 'E', 'i', 'e', 'c', 't', 'T']\n  },\n  // Day of week\n  E: {\n    priority: 90,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        // Tue\n        case 'E':\n        case 'EE':\n        case 'EEE':\n          return match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // T\n\n        case 'EEEEE':\n          return match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // Tu\n\n        case 'EEEEEE':\n          return match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // Tuesday\n\n        case 'EEEE':\n        default:\n          return match.day(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 6;\n    },\n    set: function (date, _flags, value, options) {\n      date = setUTCDay(date, value, options);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Local day of week\n  e: {\n    priority: 90,\n    parse: function (string, token, match, options) {\n      var valueCallback = function (value) {\n        var wholeWeekDays = Math.floor((value - 1) / 7) * 7;\n        return (value + options.weekStartsOn + 6) % 7 + wholeWeekDays;\n      };\n\n      switch (token) {\n        // 3\n        case 'e':\n        case 'ee':\n          // 03\n          return parseNDigits(token.length, string, valueCallback);\n        // 3rd\n\n        case 'eo':\n          return match.ordinalNumber(string, {\n            unit: 'day',\n            valueCallback: valueCallback\n          });\n        // Tue\n\n        case 'eee':\n          return match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // T\n\n        case 'eeeee':\n          return match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // Tu\n\n        case 'eeeeee':\n          return match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // Tuesday\n\n        case 'eeee':\n        default:\n          return match.day(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 6;\n    },\n    set: function (date, _flags, value, options) {\n      date = setUTCDay(date, value, options);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['y', 'R', 'u', 'q', 'Q', 'M', 'L', 'I', 'd', 'D', 'E', 'i', 'c', 't', 'T']\n  },\n  // Stand-alone local day of week\n  c: {\n    priority: 90,\n    parse: function (string, token, match, options) {\n      var valueCallback = function (value) {\n        var wholeWeekDays = Math.floor((value - 1) / 7) * 7;\n        return (value + options.weekStartsOn + 6) % 7 + wholeWeekDays;\n      };\n\n      switch (token) {\n        // 3\n        case 'c':\n        case 'cc':\n          // 03\n          return parseNDigits(token.length, string, valueCallback);\n        // 3rd\n\n        case 'co':\n          return match.ordinalNumber(string, {\n            unit: 'day',\n            valueCallback: valueCallback\n          });\n        // Tue\n\n        case 'ccc':\n          return match.day(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // T\n\n        case 'ccccc':\n          return match.day(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // Tu\n\n        case 'cccccc':\n          return match.day(string, {\n            width: 'short',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // Tuesday\n\n        case 'cccc':\n        default:\n          return match.day(string, {\n            width: 'wide',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 6;\n    },\n    set: function (date, _flags, value, options) {\n      date = setUTCDay(date, value, options);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['y', 'R', 'u', 'q', 'Q', 'M', 'L', 'I', 'd', 'D', 'E', 'i', 'e', 't', 'T']\n  },\n  // ISO day of week\n  i: {\n    priority: 90,\n    parse: function (string, token, match, _options) {\n      var valueCallback = function (value) {\n        if (value === 0) {\n          return 7;\n        }\n\n        return value;\n      };\n\n      switch (token) {\n        // 2\n        case 'i':\n        case 'ii':\n          // 02\n          return parseNDigits(token.length, string);\n        // 2nd\n\n        case 'io':\n          return match.ordinalNumber(string, {\n            unit: 'day'\n          });\n        // Tue\n\n        case 'iii':\n          return match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting',\n            valueCallback: valueCallback\n          });\n        // T\n\n        case 'iiiii':\n          return match.day(string, {\n            width: 'narrow',\n            context: 'formatting',\n            valueCallback: valueCallback\n          });\n        // Tu\n\n        case 'iiiiii':\n          return match.day(string, {\n            width: 'short',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting',\n            valueCallback: valueCallback\n          });\n        // Tuesday\n\n        case 'iiii':\n        default:\n          return match.day(string, {\n            width: 'wide',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting',\n            valueCallback: valueCallback\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 7;\n    },\n    set: function (date, _flags, value, options) {\n      date = setUTCISODay(date, value, options);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['y', 'Y', 'u', 'q', 'Q', 'M', 'L', 'w', 'd', 'D', 'E', 'e', 'c', 't', 'T']\n  },\n  // AM or PM\n  a: {\n    priority: 80,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'a':\n        case 'aa':\n        case 'aaa':\n          return match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'aaaaa':\n          return match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'aaaa':\n        default:\n          return match.dayPeriod(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['b', 'B', 'H', 'K', 'k', 't', 'T']\n  },\n  // AM, PM, midnight\n  b: {\n    priority: 80,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'b':\n        case 'bb':\n        case 'bbb':\n          return match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'bbbbb':\n          return match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'bbbb':\n        default:\n          return match.dayPeriod(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['a', 'B', 'H', 'K', 'k', 't', 'T']\n  },\n  // in the morning, in the afternoon, in the evening, at night\n  B: {\n    priority: 80,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'B':\n        case 'BB':\n        case 'BBB':\n          return match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'BBBBB':\n          return match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'BBBB':\n        default:\n          return match.dayPeriod(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['a', 'b', 't', 'T']\n  },\n  // Hour [1-12]\n  h: {\n    priority: 70,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'h':\n          return parseNumericPattern(numericPatterns.hour12h, string);\n\n        case 'ho':\n          return match.ordinalNumber(string, {\n            unit: 'hour'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 12;\n    },\n    set: function (date, _flags, value, _options) {\n      var isPM = date.getUTCHours() >= 12;\n\n      if (isPM && value < 12) {\n        date.setUTCHours(value + 12, 0, 0, 0);\n      } else if (!isPM && value === 12) {\n        date.setUTCHours(0, 0, 0, 0);\n      } else {\n        date.setUTCHours(value, 0, 0, 0);\n      }\n\n      return date;\n    },\n    incompatibleTokens: ['H', 'K', 'k', 't', 'T']\n  },\n  // Hour [0-23]\n  H: {\n    priority: 70,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'H':\n          return parseNumericPattern(numericPatterns.hour23h, string);\n\n        case 'Ho':\n          return match.ordinalNumber(string, {\n            unit: 'hour'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 23;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCHours(value, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['a', 'b', 'h', 'K', 'k', 't', 'T']\n  },\n  // Hour [0-11]\n  K: {\n    priority: 70,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'K':\n          return parseNumericPattern(numericPatterns.hour11h, string);\n\n        case 'Ko':\n          return match.ordinalNumber(string, {\n            unit: 'hour'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 11;\n    },\n    set: function (date, _flags, value, _options) {\n      var isPM = date.getUTCHours() >= 12;\n\n      if (isPM && value < 12) {\n        date.setUTCHours(value + 12, 0, 0, 0);\n      } else {\n        date.setUTCHours(value, 0, 0, 0);\n      }\n\n      return date;\n    },\n    incompatibleTokens: ['a', 'b', 'h', 'H', 'k', 't', 'T']\n  },\n  // Hour [1-24]\n  k: {\n    priority: 70,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'k':\n          return parseNumericPattern(numericPatterns.hour24h, string);\n\n        case 'ko':\n          return match.ordinalNumber(string, {\n            unit: 'hour'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 24;\n    },\n    set: function (date, _flags, value, _options) {\n      var hours = value <= 24 ? value % 24 : value;\n      date.setUTCHours(hours, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['a', 'b', 'h', 'H', 'K', 't', 'T']\n  },\n  // Minute\n  m: {\n    priority: 60,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'm':\n          return parseNumericPattern(numericPatterns.minute, string);\n\n        case 'mo':\n          return match.ordinalNumber(string, {\n            unit: 'minute'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 59;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMinutes(value, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['t', 'T']\n  },\n  // Second\n  s: {\n    priority: 50,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 's':\n          return parseNumericPattern(numericPatterns.second, string);\n\n        case 'so':\n          return match.ordinalNumber(string, {\n            unit: 'second'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 59;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCSeconds(value, 0);\n      return date;\n    },\n    incompatibleTokens: ['t', 'T']\n  },\n  // Fraction of second\n  S: {\n    priority: 30,\n    parse: function (string, token, _match, _options) {\n      var valueCallback = function (value) {\n        return Math.floor(value * Math.pow(10, -token.length + 3));\n      };\n\n      return parseNDigits(token.length, string, valueCallback);\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMilliseconds(value);\n      return date;\n    },\n    incompatibleTokens: ['t', 'T']\n  },\n  // Timezone (ISO-8601. +00:00 is `'Z'`)\n  X: {\n    priority: 10,\n    parse: function (string, token, _match, _options) {\n      switch (token) {\n        case 'X':\n          return parseTimezonePattern(timezonePatterns.basicOptionalMinutes, string);\n\n        case 'XX':\n          return parseTimezonePattern(timezonePatterns.basic, string);\n\n        case 'XXXX':\n          return parseTimezonePattern(timezonePatterns.basicOptionalSeconds, string);\n\n        case 'XXXXX':\n          return parseTimezonePattern(timezonePatterns.extendedOptionalSeconds, string);\n\n        case 'XXX':\n        default:\n          return parseTimezonePattern(timezonePatterns.extended, string);\n      }\n    },\n    set: function (date, flags, value, _options) {\n      if (flags.timestampIsSet) {\n        return date;\n      }\n\n      return new Date(date.getTime() - value);\n    },\n    incompatibleTokens: ['t', 'T', 'x']\n  },\n  // Timezone (ISO-8601)\n  x: {\n    priority: 10,\n    parse: function (string, token, _match, _options) {\n      switch (token) {\n        case 'x':\n          return parseTimezonePattern(timezonePatterns.basicOptionalMinutes, string);\n\n        case 'xx':\n          return parseTimezonePattern(timezonePatterns.basic, string);\n\n        case 'xxxx':\n          return parseTimezonePattern(timezonePatterns.basicOptionalSeconds, string);\n\n        case 'xxxxx':\n          return parseTimezonePattern(timezonePatterns.extendedOptionalSeconds, string);\n\n        case 'xxx':\n        default:\n          return parseTimezonePattern(timezonePatterns.extended, string);\n      }\n    },\n    set: function (date, flags, value, _options) {\n      if (flags.timestampIsSet) {\n        return date;\n      }\n\n      return new Date(date.getTime() - value);\n    },\n    incompatibleTokens: ['t', 'T', 'X']\n  },\n  // Seconds timestamp\n  t: {\n    priority: 40,\n    parse: function (string, _token, _match, _options) {\n      return parseAnyDigitsSigned(string);\n    },\n    set: function (_date, _flags, value, _options) {\n      return [new Date(value * 1000), {\n        timestampIsSet: true\n      }];\n    },\n    incompatibleTokens: '*'\n  },\n  // Milliseconds timestamp\n  T: {\n    priority: 20,\n    parse: function (string, _token, _match, _options) {\n      return parseAnyDigitsSigned(string);\n    },\n    set: function (_date, _flags, value, _options) {\n      return [new Date(value), {\n        timestampIsSet: true\n      }];\n    },\n    incompatibleTokens: '*'\n  }\n};\nexport default parsers;","import toInteger from '../toInteger/index.js';\nimport toDate from '../../toDate/index.js';\nimport getUTCWeek from '../getUTCWeek/index.js';\nimport requiredArgs from '../requiredArgs/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function setUTCWeek(dirtyDate, dirtyWeek, options) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var week = toInteger(dirtyWeek);\n  var diff = getUTCWeek(date, options) - week;\n  date.setUTCDate(date.getUTCDate() - diff * 7);\n  return date;\n}","import toInteger from '../toInteger/index.js';\nimport toDate from '../../toDate/index.js';\nimport getUTCISOWeek from '../getUTCISOWeek/index.js';\nimport requiredArgs from '../requiredArgs/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function setUTCISOWeek(dirtyDate, dirtyISOWeek) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var isoWeek = toInteger(dirtyISOWeek);\n  var diff = getUTCISOWeek(date) - isoWeek;\n  date.setUTCDate(date.getUTCDate() - diff * 7);\n  return date;\n}","import toInteger from '../toInteger/index.js';\nimport toDate from '../../toDate/index.js';\nimport requiredArgs from '../requiredArgs/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function setUTCISODay(dirtyDate, dirtyDay) {\n  requiredArgs(2, arguments);\n  var day = toInteger(dirtyDay);\n\n  if (day % 7 === 0) {\n    day = day - 7;\n  }\n\n  var weekStartsOn = 1;\n  var date = toDate(dirtyDate);\n  var currentDay = date.getUTCDay();\n  var remainder = day % 7;\n  var dayIndex = (remainder + 7) % 7;\n  var diff = (dayIndex < weekStartsOn ? 7 : 0) + day - currentDay;\n  date.setUTCDate(date.getUTCDate() + diff);\n  return date;\n}","import defaultLocale from '../locale/en-US/index.js';\nimport subMilliseconds from '../subMilliseconds/index.js';\nimport toDate from '../toDate/index.js';\nimport assign from '../_lib/assign/index.js';\nimport longFormatters from '../_lib/format/longFormatters/index.js';\nimport getTimezoneOffsetInMilliseconds from '../_lib/getTimezoneOffsetInMilliseconds/index.js';\nimport { isProtectedDayOfYearToken, isProtectedWeekYearToken, throwProtectedError } from '../_lib/protectedTokens/index.js';\nimport toInteger from '../_lib/toInteger/index.js';\nimport parsers from './_lib/parsers/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\nvar TIMEZONE_UNIT_PRIORITY = 10; // This RegExp consists of three parts separated by `|`:\n// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token\n//   (one of the certain letters followed by `o`)\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\n\nvar formattingTokensRegExp = /[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g; // This RegExp catches symbols escaped by quotes, and also\n// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`\n\nvar longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;\nvar escapedStringRegExp = /^'([^]*?)'?$/;\nvar doubleQuoteRegExp = /''/g;\nvar notWhitespaceRegExp = /\\S/;\nvar unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n/**\n * @name parse\n * @category Common Helpers\n * @summary Parse the date.\n *\n * @description\n * Return the date parsed from string using the given format string.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://git.io/fxCyr\n *\n * The characters in the format string wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n *\n * Format of the format string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 5 below the table).\n *\n * Not all tokens are compatible. Combinations that don't make sense or could lead to bugs are prohibited\n * and will throw `RangeError`. For example usage of 24-hour format token with AM/PM token will throw an exception:\n *\n * ```javascript\n * parse('23 AM', 'HH a', new Date())\n * //=> RangeError: The format string mustn't contain `HH` and `a` at the same time\n * ```\n *\n * See the compatibility table: https://docs.google.com/spreadsheets/d/e/2PACX-1vQOPU3xUhplll6dyoMmVUXHKl_8CRDs6_ueLmex3SoqwhuolkuN3O05l4rqx5h1dKX8eb46Ul-CCSrq/pubhtml?gid=0&single=true\n *\n * Accepted format string patterns:\n * | Unit                            |Prior| Pattern | Result examples                   | Notes |\n * |---------------------------------|-----|---------|-----------------------------------|-------|\n * | Era                             | 140 | G..GGG  | AD, BC                            |       |\n * |                                 |     | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 |     | GGGGG   | A, B                              |       |\n * | Calendar year                   | 130 | y       | 44, 1, 1900, 2017, 9999           | 4     |\n * |                                 |     | yo      | 44th, 1st, 1900th, 9999999th      | 4,5   |\n * |                                 |     | yy      | 44, 01, 00, 17                    | 4     |\n * |                                 |     | yyy     | 044, 001, 123, 999                | 4     |\n * |                                 |     | yyyy    | 0044, 0001, 1900, 2017            | 4     |\n * |                                 |     | yyyyy   | ...                               | 2,4   |\n * | Local week-numbering year       | 130 | Y       | 44, 1, 1900, 2017, 9000           | 4     |\n * |                                 |     | Yo      | 44th, 1st, 1900th, 9999999th      | 4,5   |\n * |                                 |     | YY      | 44, 01, 00, 17                    | 4,6   |\n * |                                 |     | YYY     | 044, 001, 123, 999                | 4     |\n * |                                 |     | YYYY    | 0044, 0001, 1900, 2017            | 4,6   |\n * |                                 |     | YYYYY   | ...                               | 2,4   |\n * | ISO week-numbering year         | 130 | R       | -43, 1, 1900, 2017, 9999, -9999   | 4,5   |\n * |                                 |     | RR      | -43, 01, 00, 17                   | 4,5   |\n * |                                 |     | RRR     | -043, 001, 123, 999, -999         | 4,5   |\n * |                                 |     | RRRR    | -0043, 0001, 2017, 9999, -9999    | 4,5   |\n * |                                 |     | RRRRR   | ...                               | 2,4,5 |\n * | Extended year                   | 130 | u       | -43, 1, 1900, 2017, 9999, -999    | 4     |\n * |                                 |     | uu      | -43, 01, 99, -99                  | 4     |\n * |                                 |     | uuu     | -043, 001, 123, 999, -999         | 4     |\n * |                                 |     | uuuu    | -0043, 0001, 2017, 9999, -9999    | 4     |\n * |                                 |     | uuuuu   | ...                               | 2,4   |\n * | Quarter (formatting)            | 120 | Q       | 1, 2, 3, 4                        |       |\n * |                                 |     | Qo      | 1st, 2nd, 3rd, 4th                | 5     |\n * |                                 |     | QQ      | 01, 02, 03, 04                    |       |\n * |                                 |     | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 |     | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 |     | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | 120 | q       | 1, 2, 3, 4                        |       |\n * |                                 |     | qo      | 1st, 2nd, 3rd, 4th                | 5     |\n * |                                 |     | qq      | 01, 02, 03, 04                    |       |\n * |                                 |     | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 |     | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 |     | qqqqq   | 1, 2, 3, 4                        | 3     |\n * | Month (formatting)              | 110 | M       | 1, 2, ..., 12                     |       |\n * |                                 |     | Mo      | 1st, 2nd, ..., 12th               | 5     |\n * |                                 |     | MM      | 01, 02, ..., 12                   |       |\n * |                                 |     | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 |     | MMMM    | January, February, ..., December  | 2     |\n * |                                 |     | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | 110 | L       | 1, 2, ..., 12                     |       |\n * |                                 |     | Lo      | 1st, 2nd, ..., 12th               | 5     |\n * |                                 |     | LL      | 01, 02, ..., 12                   |       |\n * |                                 |     | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 |     | LLLL    | January, February, ..., December  | 2     |\n * |                                 |     | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | 100 | w       | 1, 2, ..., 53                     |       |\n * |                                 |     | wo      | 1st, 2nd, ..., 53th               | 5     |\n * |                                 |     | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | 100 | I       | 1, 2, ..., 53                     | 5     |\n * |                                 |     | Io      | 1st, 2nd, ..., 53th               | 5     |\n * |                                 |     | II      | 01, 02, ..., 53                   | 5     |\n * | Day of month                    |  90 | d       | 1, 2, ..., 31                     |       |\n * |                                 |     | do      | 1st, 2nd, ..., 31st               | 5     |\n * |                                 |     | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     |  90 | D       | 1, 2, ..., 365, 366               | 7     |\n * |                                 |     | Do      | 1st, 2nd, ..., 365th, 366th       | 5     |\n * |                                 |     | DD      | 01, 02, ..., 365, 366             | 7     |\n * |                                 |     | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 |     | DDDD    | ...                               | 2     |\n * | Day of week (formatting)        |  90 | E..EEE  | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 |     | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 |     | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 |     | EEEEEE  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | ISO day of week (formatting)    |  90 | i       | 1, 2, 3, ..., 7                   | 5     |\n * |                                 |     | io      | 1st, 2nd, ..., 7th                | 5     |\n * |                                 |     | ii      | 01, 02, ..., 07                   | 5     |\n * |                                 |     | iii     | Mon, Tue, Wed, ..., Sun           | 5     |\n * |                                 |     | iiii    | Monday, Tuesday, ..., Sunday      | 2,5   |\n * |                                 |     | iiiii   | M, T, W, T, F, S, S               | 5     |\n * |                                 |     | iiiiii  | Mo, Tu, We, Th, Fr, Su, Sa        | 5     |\n * | Local day of week (formatting)  |  90 | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 |     | eo      | 2nd, 3rd, ..., 1st                | 5     |\n * |                                 |     | ee      | 02, 03, ..., 01                   |       |\n * |                                 |     | eee     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 |     | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 |     | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 |     | eeeeee  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | Local day of week (stand-alone) |  90 | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 |     | co      | 2nd, 3rd, ..., 1st                | 5     |\n * |                                 |     | cc      | 02, 03, ..., 01                   |       |\n * |                                 |     | ccc     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 |     | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 |     | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 |     | cccccc  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | AM, PM                          |  80 | a..aaa  | AM, PM                            |       |\n * |                                 |     | aaaa    | a.m., p.m.                        | 2     |\n * |                                 |     | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          |  80 | b..bbb  | AM, PM, noon, midnight            |       |\n * |                                 |     | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 |     | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             |  80 | B..BBB  | at night, in the morning, ...     |       |\n * |                                 |     | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 |     | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     |  70 | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 |     | ho      | 1st, 2nd, ..., 11th, 12th         | 5     |\n * |                                 |     | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     |  70 | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 |     | Ho      | 0th, 1st, 2nd, ..., 23rd          | 5     |\n * |                                 |     | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     |  70 | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 |     | Ko      | 1st, 2nd, ..., 11th, 0th          | 5     |\n * |                                 |     | KK      | 01, 02, ..., 11, 00               |       |\n * | Hour [1-24]                     |  70 | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 |     | ko      | 24th, 1st, 2nd, ..., 23rd         | 5     |\n * |                                 |     | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          |  60 | m       | 0, 1, ..., 59                     |       |\n * |                                 |     | mo      | 0th, 1st, ..., 59th               | 5     |\n * |                                 |     | mm      | 00, 01, ..., 59                   |       |\n * | Second                          |  50 | s       | 0, 1, ..., 59                     |       |\n * |                                 |     | so      | 0th, 1st, ..., 59th               | 5     |\n * |                                 |     | ss      | 00, 01, ..., 59                   |       |\n * | Seconds timestamp               |  40 | t       | 512969520                         |       |\n * |                                 |     | tt      | ...                               | 2     |\n * | Fraction of second              |  30 | S       | 0, 1, ..., 9                      |       |\n * |                                 |     | SS      | 00, 01, ..., 99                   |       |\n * |                                 |     | SSS     | 000, 0001, ..., 999               |       |\n * |                                 |     | SSSS    | ...                               | 2     |\n * | Milliseconds timestamp          |  20 | T       | 512969520900                      |       |\n * |                                 |     | TT      | ...                               | 2     |\n * | Timezone (ISO-8601 w/ Z)        |  10 | X       | -08, +0530, Z                     |       |\n * |                                 |     | XX      | -0800, +0530, Z                   |       |\n * |                                 |     | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 |     | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 |     | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       |  10 | x       | -08, +0530, +00                   |       |\n * |                                 |     | xx      | -0800, +0530, +0000               |       |\n * |                                 |     | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 |     | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 |     | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Long localized date             |  NA | P       | 05/29/1453                        | 5,8   |\n * |                                 |     | PP      | May 29, 1453                      |       |\n * |                                 |     | PPP     | May 29th, 1453                    |       |\n * |                                 |     | PPPP    | Sunday, May 29th, 1453            | 2,5,8 |\n * | Long localized time             |  NA | p       | 12:00 AM                          | 5,8   |\n * |                                 |     | pp      | 12:00:00 AM                       |       |\n * | Combination of date and time    |  NA | Pp      | 05/29/1453, 12:00 AM              |       |\n * |                                 |     | PPpp    | May 29, 1453, 12:00:00 AM         |       |\n * |                                 |     | PPPpp   | May 29th, 1453 at ...             |       |\n * |                                 |     | PPPPpp  | Sunday, May 29th, 1453 at ...     | 2,5,8 |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular.\n *    In `format` function, they will produce different result:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n *    `parse` will try to match both formatting and stand-alone units interchangably.\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table:\n *    - for numerical units (`yyyyyyyy`) `parse` will try to match a number\n *      as wide as the sequence\n *    - for text units (`MMMMMMMM`) `parse` will try to match the widest variation of the unit.\n *      These variations are marked with \"2\" in the last column of the table.\n *\n * 3. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 4. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` will try to guess the century of two digit year by proximity with `referenceDate`:\n *\n *    `parse('50', 'yy', new Date(2018, 0, 1)) //=> Sat Jan 01 2050 00:00:00`\n *\n *    `parse('75', 'yy', new Date(2018, 0, 1)) //=> Wed Jan 01 1975 00:00:00`\n *\n *    while `uu` will just assign the year as is:\n *\n *    `parse('50', 'uu', new Date(2018, 0, 1)) //=> Sat Jan 01 0050 00:00:00`\n *\n *    `parse('75', 'uu', new Date(2018, 0, 1)) //=> Tue Jan 01 0075 00:00:00`\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [setISOWeekYear]{@link https://date-fns.org/docs/setISOWeekYear}\n *    and [setWeekYear]{@link https://date-fns.org/docs/setWeekYear}).\n *\n * 5. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 6. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://git.io/fxCyr\n *\n * 7. `D` and `DD` tokens represent days of the year but they are ofthen confused with days of the month.\n *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://git.io/fxCyr\n *\n * 8. `P+` tokens do not have a defined priority since they are merely aliases to other tokens based\n *    on the given locale.\n *\n *    using `en-US` locale: `P` => `MM/dd/yyyy`\n *    using `en-US` locale: `p` => `hh:mm a`\n *    using `pt-BR` locale: `P` => `dd/MM/yyyy`\n *    using `pt-BR` locale: `p` => `HH:mm`\n *\n * Values will be assigned to the date in the descending order of its unit's priority.\n * Units of an equal priority overwrite each other in the order of appearance.\n *\n * If no values of higher priority are parsed (e.g. when parsing string 'January 1st' without a year),\n * the values will be taken from 3rd argument `referenceDate` which works as a context of parsing.\n *\n * `referenceDate` must be passed for correct work of the function.\n * If you're not sure which `referenceDate` to supply, create a new instance of Date:\n * `parse('02/11/2014', 'MM/dd/yyyy', new Date())`\n * In this case parsing will be done in the context of the current date.\n * If `referenceDate` is `Invalid Date` or a value not convertible to valid `Date`,\n * then `Invalid Date` will be returned.\n *\n * The result may vary by locale.\n *\n * If `formatString` matches with `dateString` but does not provides tokens, `referenceDate` will be returned.\n *\n * If parsing failed, `Invalid Date` will be returned.\n * Invalid Date is a Date, whose time value is NaN.\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - Old `parse` was renamed to `toDate`.\n *   Now `parse` is a new function which parses a string using a provided format.\n *\n *   ```javascript\n *   // Before v2.0.0\n *   parse('2016-01-01')\n *\n *   // v2.0.0 onward\n *   toDate('2016-01-01')\n *   parse('2016-01-01', 'yyyy-MM-dd', new Date())\n *   ```\n *\n * @param {String} dateString - the string to parse\n * @param {String} formatString - the string of tokens\n * @param {Date|Number} referenceDate - defines values missing from the parsed dateString\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {1|2|3|4|5|6|7} [options.firstWeekContainsDate=1] - the day of January, which is always in the first week of the year\n * @param {Boolean} [options.useAdditionalWeekYearTokens=false] - if true, allows usage of the week-numbering year tokens `YY` and `YYYY`;\n *   see: https://git.io/fxCyr\n * @param {Boolean} [options.useAdditionalDayOfYearTokens=false] - if true, allows usage of the day of year tokens `D` and `DD`;\n *   see: https://git.io/fxCyr\n * @returns {Date} the parsed date\n * @throws {TypeError} 3 arguments required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7\n * @throws {RangeError} `options.locale` must contain `match` property\n * @throws {RangeError} use `yyyy` instead of `YYYY` for formatting years using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} use `yy` instead of `YY` for formatting years using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} use `d` instead of `D` for formatting days of the month using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} use `dd` instead of `DD` for formatting days of the month using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} format string contains an unescaped latin alphabet character\n *\n * @example\n * // Parse 11 February 2014 from middle-endian format:\n * var result = parse('02/11/2014', 'MM/dd/yyyy', new Date())\n * //=> Tue Feb 11 2014 00:00:00\n *\n * @example\n * // Parse 28th of February in Esperanto locale in the context of 2010 year:\n * import eo from 'date-fns/locale/eo'\n * var result = parse('28-a de februaro', \"do 'de' MMMM\", new Date(2010, 0, 1), {\n *   locale: eo\n * })\n * //=> Sun Feb 28 2010 00:00:00\n */\n\nexport default function parse(dirtyDateString, dirtyFormatString, dirtyReferenceDate, dirtyOptions) {\n  requiredArgs(3, arguments);\n  var dateString = String(dirtyDateString);\n  var formatString = String(dirtyFormatString);\n  var options = dirtyOptions || {};\n  var locale = options.locale || defaultLocale;\n\n  if (!locale.match) {\n    throw new RangeError('locale must contain match property');\n  }\n\n  var localeFirstWeekContainsDate = locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\n\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');\n  }\n\n  var localeWeekStartsOn = locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  if (formatString === '') {\n    if (dateString === '') {\n      return toDate(dirtyReferenceDate);\n    } else {\n      return new Date(NaN);\n    }\n  }\n\n  var subFnOptions = {\n    firstWeekContainsDate: firstWeekContainsDate,\n    weekStartsOn: weekStartsOn,\n    locale: locale // If timezone isn't specified, it will be set to the system timezone\n\n  };\n  var setters = [{\n    priority: TIMEZONE_UNIT_PRIORITY,\n    subPriority: -1,\n    set: dateToSystemTimezone,\n    index: 0\n  }];\n  var i;\n  var tokens = formatString.match(longFormattingTokensRegExp).map(function (substring) {\n    var firstCharacter = substring[0];\n\n    if (firstCharacter === 'p' || firstCharacter === 'P') {\n      var longFormatter = longFormatters[firstCharacter];\n      return longFormatter(substring, locale.formatLong, subFnOptions);\n    }\n\n    return substring;\n  }).join('').match(formattingTokensRegExp);\n  var usedTokens = [];\n\n  for (i = 0; i < tokens.length; i++) {\n    var token = tokens[i];\n\n    if (!options.useAdditionalWeekYearTokens && isProtectedWeekYearToken(token)) {\n      throwProtectedError(token, formatString, dirtyDateString);\n    }\n\n    if (!options.useAdditionalDayOfYearTokens && isProtectedDayOfYearToken(token)) {\n      throwProtectedError(token, formatString, dirtyDateString);\n    }\n\n    var firstCharacter = token[0];\n    var parser = parsers[firstCharacter];\n\n    if (parser) {\n      var incompatibleTokens = parser.incompatibleTokens;\n\n      if (Array.isArray(incompatibleTokens)) {\n        var incompatibleToken = void 0;\n\n        for (var _i = 0; _i < usedTokens.length; _i++) {\n          var usedToken = usedTokens[_i].token;\n\n          if (incompatibleTokens.indexOf(usedToken) !== -1 || usedToken === firstCharacter) {\n            incompatibleToken = usedTokens[_i];\n            break;\n          }\n        }\n\n        if (incompatibleToken) {\n          throw new RangeError(\"The format string mustn't contain `\".concat(incompatibleToken.fullToken, \"` and `\").concat(token, \"` at the same time\"));\n        }\n      } else if (parser.incompatibleTokens === '*' && usedTokens.length) {\n        throw new RangeError(\"The format string mustn't contain `\".concat(token, \"` and any other token at the same time\"));\n      }\n\n      usedTokens.push({\n        token: firstCharacter,\n        fullToken: token\n      });\n      var parseResult = parser.parse(dateString, token, locale.match, subFnOptions);\n\n      if (!parseResult) {\n        return new Date(NaN);\n      }\n\n      setters.push({\n        priority: parser.priority,\n        subPriority: parser.subPriority || 0,\n        set: parser.set,\n        validate: parser.validate,\n        value: parseResult.value,\n        index: setters.length\n      });\n      dateString = parseResult.rest;\n    } else {\n      if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n        throw new RangeError('Format string contains an unescaped latin alphabet character `' + firstCharacter + '`');\n      } // Replace two single quote characters with one single quote character\n\n\n      if (token === \"''\") {\n        token = \"'\";\n      } else if (firstCharacter === \"'\") {\n        token = cleanEscapedString(token);\n      } // Cut token from string, or, if string doesn't match the token, return Invalid Date\n\n\n      if (dateString.indexOf(token) === 0) {\n        dateString = dateString.slice(token.length);\n      } else {\n        return new Date(NaN);\n      }\n    }\n  } // Check if the remaining input contains something other than whitespace\n\n\n  if (dateString.length > 0 && notWhitespaceRegExp.test(dateString)) {\n    return new Date(NaN);\n  }\n\n  var uniquePrioritySetters = setters.map(function (setter) {\n    return setter.priority;\n  }).sort(function (a, b) {\n    return b - a;\n  }).filter(function (priority, index, array) {\n    return array.indexOf(priority) === index;\n  }).map(function (priority) {\n    return setters.filter(function (setter) {\n      return setter.priority === priority;\n    }).sort(function (a, b) {\n      return b.subPriority - a.subPriority;\n    });\n  }).map(function (setterArray) {\n    return setterArray[0];\n  });\n  var date = toDate(dirtyReferenceDate);\n\n  if (isNaN(date)) {\n    return new Date(NaN);\n  } // Convert the date in system timezone to the same date in UTC+00:00 timezone.\n  // This ensures that when UTC functions will be implemented, locales will be compatible with them.\n  // See an issue about UTC functions: https://github.com/date-fns/date-fns/issues/37\n\n\n  var utcDate = subMilliseconds(date, getTimezoneOffsetInMilliseconds(date));\n  var flags = {};\n\n  for (i = 0; i < uniquePrioritySetters.length; i++) {\n    var setter = uniquePrioritySetters[i];\n\n    if (setter.validate && !setter.validate(utcDate, setter.value, subFnOptions)) {\n      return new Date(NaN);\n    }\n\n    var result = setter.set(utcDate, flags, setter.value, subFnOptions); // Result is tuple (date, flags)\n\n    if (result[0]) {\n      utcDate = result[0];\n      assign(flags, result[1]); // Result is date\n    } else {\n      utcDate = result;\n    }\n  }\n\n  return utcDate;\n}\n\nfunction dateToSystemTimezone(date, flags) {\n  if (flags.timestampIsSet) {\n    return date;\n  }\n\n  var convertedDate = new Date(0);\n  convertedDate.setFullYear(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate());\n  convertedDate.setHours(date.getUTCHours(), date.getUTCMinutes(), date.getUTCSeconds(), date.getUTCMilliseconds());\n  return convertedDate;\n}\n\nfunction cleanEscapedString(input) {\n  return input.match(escapedStringRegExp)[1].replace(doubleQuoteRegExp, \"'\");\n}","export default function addLeadingZeros(number, targetLength) {\n  var sign = number < 0 ? '-' : '';\n  var output = Math.abs(number).toString();\n\n  while (output.length < targetLength) {\n    output = '0' + output;\n  }\n\n  return sign + output;\n}","import addLeadingZeros from '../../addLeadingZeros/index.js';\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* |                                |\n * |  d  | Day of month                   |  D  |                                |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  m  | Minute                         |  M  | Month                          |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  y  | Year (abs)                     |  Y  |                                |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n */\n\nvar formatters = {\n  // Year\n  y: function (date, token) {\n    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_tokens\n    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n    // |----------|-------|----|-------|-------|-------|\n    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\n    var signedYear = date.getUTCFullYear(); // Returns 1 for 1 BC (which is year 0 in JavaScript)\n\n    var year = signedYear > 0 ? signedYear : 1 - signedYear;\n    return addLeadingZeros(token === 'yy' ? year % 100 : year, token.length);\n  },\n  // Month\n  M: function (date, token) {\n    var month = date.getUTCMonth();\n    return token === 'M' ? String(month + 1) : addLeadingZeros(month + 1, 2);\n  },\n  // Day of the month\n  d: function (date, token) {\n    return addLeadingZeros(date.getUTCDate(), token.length);\n  },\n  // AM or PM\n  a: function (date, token) {\n    var dayPeriodEnumValue = date.getUTCHours() / 12 >= 1 ? 'pm' : 'am';\n\n    switch (token) {\n      case 'a':\n      case 'aa':\n      case 'aaa':\n        return dayPeriodEnumValue.toUpperCase();\n\n      case 'aaaaa':\n        return dayPeriodEnumValue[0];\n\n      case 'aaaa':\n      default:\n        return dayPeriodEnumValue === 'am' ? 'a.m.' : 'p.m.';\n    }\n  },\n  // Hour [1-12]\n  h: function (date, token) {\n    return addLeadingZeros(date.getUTCHours() % 12 || 12, token.length);\n  },\n  // Hour [0-23]\n  H: function (date, token) {\n    return addLeadingZeros(date.getUTCHours(), token.length);\n  },\n  // Minute\n  m: function (date, token) {\n    return addLeadingZeros(date.getUTCMinutes(), token.length);\n  },\n  // Second\n  s: function (date, token) {\n    return addLeadingZeros(date.getUTCSeconds(), token.length);\n  },\n  // Fraction of second\n  S: function (date, token) {\n    var numberOfDigits = token.length;\n    var milliseconds = date.getUTCMilliseconds();\n    var fractionalSeconds = Math.floor(milliseconds * Math.pow(10, numberOfDigits - 3));\n    return addLeadingZeros(fractionalSeconds, token.length);\n  }\n};\nexport default formatters;","import lightFormatters from '../lightFormatters/index.js';\nimport getUTCDayOfYear from '../../../_lib/getUTCDayOfYear/index.js';\nimport getUTCISOWeek from '../../../_lib/getUTCISOWeek/index.js';\nimport getUTCISOWeekYear from '../../../_lib/getUTCISOWeekYear/index.js';\nimport getUTCWeek from '../../../_lib/getUTCWeek/index.js';\nimport getUTCWeekYear from '../../../_lib/getUTCWeekYear/index.js';\nimport addLeadingZeros from '../../addLeadingZeros/index.js';\nvar dayPeriodEnum = {\n  am: 'am',\n  pm: 'pm',\n  midnight: 'midnight',\n  noon: 'noon',\n  morning: 'morning',\n  afternoon: 'afternoon',\n  evening: 'evening',\n  night: 'night'\n  /*\n   * |     | Unit                           |     | Unit                           |\n   * |-----|--------------------------------|-----|--------------------------------|\n   * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n   * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n   * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n   * |  d  | Day of month                   |  D  | Day of year                    |\n   * |  e  | Local day of week              |  E  | Day of week                    |\n   * |  f  |                                |  F* | Day of week in month           |\n   * |  g* | Modified Julian day            |  G  | Era                            |\n   * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n   * |  i! | ISO day of week                |  I! | ISO week of year               |\n   * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n   * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n   * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n   * |  m  | Minute                         |  M  | Month                          |\n   * |  n  |                                |  N  |                                |\n   * |  o! | Ordinal number modifier        |  O  | Timezone (GMT)                 |\n   * |  p! | Long localized time            |  P! | Long localized date            |\n   * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n   * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n   * |  s  | Second                         |  S  | Fraction of second             |\n   * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n   * |  u  | Extended year                  |  U* | Cyclic year                    |\n   * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n   * |  w  | Local week of year             |  W* | Week of month                  |\n   * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n   * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n   * |  z  | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n   *\n   * Letters marked by * are not implemented but reserved by Unicode standard.\n   *\n   * Letters marked by ! are non-standard, but implemented by date-fns:\n   * - `o` modifies the previous token to turn it into an ordinal (see `format` docs)\n   * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n   *   i.e. 7 for Sunday, 1 for Monday, etc.\n   * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n   * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n   *   `R` is supposed to be used in conjunction with `I` and `i`\n   *   for universal ISO week-numbering date, whereas\n   *   `Y` is supposed to be used in conjunction with `w` and `e`\n   *   for week-numbering date specific to the locale.\n   * - `P` is long localized date format\n   * - `p` is long localized time format\n   */\n\n};\nvar formatters = {\n  // Era\n  G: function (date, token, localize) {\n    var era = date.getUTCFullYear() > 0 ? 1 : 0;\n\n    switch (token) {\n      // AD, BC\n      case 'G':\n      case 'GG':\n      case 'GGG':\n        return localize.era(era, {\n          width: 'abbreviated'\n        });\n      // A, B\n\n      case 'GGGGG':\n        return localize.era(era, {\n          width: 'narrow'\n        });\n      // Anno Domini, Before Christ\n\n      case 'GGGG':\n      default:\n        return localize.era(era, {\n          width: 'wide'\n        });\n    }\n  },\n  // Year\n  y: function (date, token, localize) {\n    // Ordinal number\n    if (token === 'yo') {\n      var signedYear = date.getUTCFullYear(); // Returns 1 for 1 BC (which is year 0 in JavaScript)\n\n      var year = signedYear > 0 ? signedYear : 1 - signedYear;\n      return localize.ordinalNumber(year, {\n        unit: 'year'\n      });\n    }\n\n    return lightFormatters.y(date, token);\n  },\n  // Local week-numbering year\n  Y: function (date, token, localize, options) {\n    var signedWeekYear = getUTCWeekYear(date, options); // Returns 1 for 1 BC (which is year 0 in JavaScript)\n\n    var weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear; // Two digit year\n\n    if (token === 'YY') {\n      var twoDigitYear = weekYear % 100;\n      return addLeadingZeros(twoDigitYear, 2);\n    } // Ordinal number\n\n\n    if (token === 'Yo') {\n      return localize.ordinalNumber(weekYear, {\n        unit: 'year'\n      });\n    } // Padding\n\n\n    return addLeadingZeros(weekYear, token.length);\n  },\n  // ISO week-numbering year\n  R: function (date, token) {\n    var isoWeekYear = getUTCISOWeekYear(date); // Padding\n\n    return addLeadingZeros(isoWeekYear, token.length);\n  },\n  // Extended year. This is a single number designating the year of this calendar system.\n  // The main difference between `y` and `u` localizers are B.C. years:\n  // | Year | `y` | `u` |\n  // |------|-----|-----|\n  // | AC 1 |   1 |   1 |\n  // | BC 1 |   1 |   0 |\n  // | BC 2 |   2 |  -1 |\n  // Also `yy` always returns the last two digits of a year,\n  // while `uu` pads single digit years to 2 characters and returns other years unchanged.\n  u: function (date, token) {\n    var year = date.getUTCFullYear();\n    return addLeadingZeros(year, token.length);\n  },\n  // Quarter\n  Q: function (date, token, localize) {\n    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);\n\n    switch (token) {\n      // 1, 2, 3, 4\n      case 'Q':\n        return String(quarter);\n      // 01, 02, 03, 04\n\n      case 'QQ':\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n\n      case 'Qo':\n        return localize.ordinalNumber(quarter, {\n          unit: 'quarter'\n        });\n      // Q1, Q2, Q3, Q4\n\n      case 'QQQ':\n        return localize.quarter(quarter, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n\n      case 'QQQQQ':\n        return localize.quarter(quarter, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // 1st quarter, 2nd quarter, ...\n\n      case 'QQQQ':\n      default:\n        return localize.quarter(quarter, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone quarter\n  q: function (date, token, localize) {\n    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);\n\n    switch (token) {\n      // 1, 2, 3, 4\n      case 'q':\n        return String(quarter);\n      // 01, 02, 03, 04\n\n      case 'qq':\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n\n      case 'qo':\n        return localize.ordinalNumber(quarter, {\n          unit: 'quarter'\n        });\n      // Q1, Q2, Q3, Q4\n\n      case 'qqq':\n        return localize.quarter(quarter, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n\n      case 'qqqqq':\n        return localize.quarter(quarter, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // 1st quarter, 2nd quarter, ...\n\n      case 'qqqq':\n      default:\n        return localize.quarter(quarter, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // Month\n  M: function (date, token, localize) {\n    var month = date.getUTCMonth();\n\n    switch (token) {\n      case 'M':\n      case 'MM':\n        return lightFormatters.M(date, token);\n      // 1st, 2nd, ..., 12th\n\n      case 'Mo':\n        return localize.ordinalNumber(month + 1, {\n          unit: 'month'\n        });\n      // Jan, Feb, ..., Dec\n\n      case 'MMM':\n        return localize.month(month, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // J, F, ..., D\n\n      case 'MMMMM':\n        return localize.month(month, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // January, February, ..., December\n\n      case 'MMMM':\n      default:\n        return localize.month(month, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone month\n  L: function (date, token, localize) {\n    var month = date.getUTCMonth();\n\n    switch (token) {\n      // 1, 2, ..., 12\n      case 'L':\n        return String(month + 1);\n      // 01, 02, ..., 12\n\n      case 'LL':\n        return addLeadingZeros(month + 1, 2);\n      // 1st, 2nd, ..., 12th\n\n      case 'Lo':\n        return localize.ordinalNumber(month + 1, {\n          unit: 'month'\n        });\n      // Jan, Feb, ..., Dec\n\n      case 'LLL':\n        return localize.month(month, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // J, F, ..., D\n\n      case 'LLLLL':\n        return localize.month(month, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // January, February, ..., December\n\n      case 'LLLL':\n      default:\n        return localize.month(month, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // Local week of year\n  w: function (date, token, localize, options) {\n    var week = getUTCWeek(date, options);\n\n    if (token === 'wo') {\n      return localize.ordinalNumber(week, {\n        unit: 'week'\n      });\n    }\n\n    return addLeadingZeros(week, token.length);\n  },\n  // ISO week of year\n  I: function (date, token, localize) {\n    var isoWeek = getUTCISOWeek(date);\n\n    if (token === 'Io') {\n      return localize.ordinalNumber(isoWeek, {\n        unit: 'week'\n      });\n    }\n\n    return addLeadingZeros(isoWeek, token.length);\n  },\n  // Day of the month\n  d: function (date, token, localize) {\n    if (token === 'do') {\n      return localize.ordinalNumber(date.getUTCDate(), {\n        unit: 'date'\n      });\n    }\n\n    return lightFormatters.d(date, token);\n  },\n  // Day of year\n  D: function (date, token, localize) {\n    var dayOfYear = getUTCDayOfYear(date);\n\n    if (token === 'Do') {\n      return localize.ordinalNumber(dayOfYear, {\n        unit: 'dayOfYear'\n      });\n    }\n\n    return addLeadingZeros(dayOfYear, token.length);\n  },\n  // Day of week\n  E: function (date, token, localize) {\n    var dayOfWeek = date.getUTCDay();\n\n    switch (token) {\n      // Tue\n      case 'E':\n      case 'EE':\n      case 'EEE':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n\n      case 'EEEEE':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n\n      case 'EEEEEE':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n\n      case 'EEEE':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Local day of week\n  e: function (date, token, localize, options) {\n    var dayOfWeek = date.getUTCDay();\n    var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n\n    switch (token) {\n      // Numerical value (Nth day of week with current locale or weekStartsOn)\n      case 'e':\n        return String(localDayOfWeek);\n      // Padded numerical value\n\n      case 'ee':\n        return addLeadingZeros(localDayOfWeek, 2);\n      // 1st, 2nd, ..., 7th\n\n      case 'eo':\n        return localize.ordinalNumber(localDayOfWeek, {\n          unit: 'day'\n        });\n\n      case 'eee':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n\n      case 'eeeee':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n\n      case 'eeeeee':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n\n      case 'eeee':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone local day of week\n  c: function (date, token, localize, options) {\n    var dayOfWeek = date.getUTCDay();\n    var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n\n    switch (token) {\n      // Numerical value (same as in `e`)\n      case 'c':\n        return String(localDayOfWeek);\n      // Padded numerical value\n\n      case 'cc':\n        return addLeadingZeros(localDayOfWeek, token.length);\n      // 1st, 2nd, ..., 7th\n\n      case 'co':\n        return localize.ordinalNumber(localDayOfWeek, {\n          unit: 'day'\n        });\n\n      case 'ccc':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // T\n\n      case 'ccccc':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // Tu\n\n      case 'cccccc':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'standalone'\n        });\n      // Tuesday\n\n      case 'cccc':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // ISO day of week\n  i: function (date, token, localize) {\n    var dayOfWeek = date.getUTCDay();\n    var isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek;\n\n    switch (token) {\n      // 2\n      case 'i':\n        return String(isoDayOfWeek);\n      // 02\n\n      case 'ii':\n        return addLeadingZeros(isoDayOfWeek, token.length);\n      // 2nd\n\n      case 'io':\n        return localize.ordinalNumber(isoDayOfWeek, {\n          unit: 'day'\n        });\n      // Tue\n\n      case 'iii':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n\n      case 'iiiii':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n\n      case 'iiiiii':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n\n      case 'iiii':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // AM or PM\n  a: function (date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue = hours / 12 >= 1 ? 'pm' : 'am';\n\n    switch (token) {\n      case 'a':\n      case 'aa':\n      case 'aaa':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n\n      case 'aaaaa':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n\n      case 'aaaa':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // AM, PM, midnight, noon\n  b: function (date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue;\n\n    if (hours === 12) {\n      dayPeriodEnumValue = dayPeriodEnum.noon;\n    } else if (hours === 0) {\n      dayPeriodEnumValue = dayPeriodEnum.midnight;\n    } else {\n      dayPeriodEnumValue = hours / 12 >= 1 ? 'pm' : 'am';\n    }\n\n    switch (token) {\n      case 'b':\n      case 'bb':\n      case 'bbb':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n\n      case 'bbbbb':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n\n      case 'bbbb':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // in the morning, in the afternoon, in the evening, at night\n  B: function (date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue;\n\n    if (hours >= 17) {\n      dayPeriodEnumValue = dayPeriodEnum.evening;\n    } else if (hours >= 12) {\n      dayPeriodEnumValue = dayPeriodEnum.afternoon;\n    } else if (hours >= 4) {\n      dayPeriodEnumValue = dayPeriodEnum.morning;\n    } else {\n      dayPeriodEnumValue = dayPeriodEnum.night;\n    }\n\n    switch (token) {\n      case 'B':\n      case 'BB':\n      case 'BBB':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n\n      case 'BBBBB':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n\n      case 'BBBB':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Hour [1-12]\n  h: function (date, token, localize) {\n    if (token === 'ho') {\n      var hours = date.getUTCHours() % 12;\n      if (hours === 0) hours = 12;\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n\n    return lightFormatters.h(date, token);\n  },\n  // Hour [0-23]\n  H: function (date, token, localize) {\n    if (token === 'Ho') {\n      return localize.ordinalNumber(date.getUTCHours(), {\n        unit: 'hour'\n      });\n    }\n\n    return lightFormatters.H(date, token);\n  },\n  // Hour [0-11]\n  K: function (date, token, localize) {\n    var hours = date.getUTCHours() % 12;\n\n    if (token === 'Ko') {\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n  // Hour [1-24]\n  k: function (date, token, localize) {\n    var hours = date.getUTCHours();\n    if (hours === 0) hours = 24;\n\n    if (token === 'ko') {\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n  // Minute\n  m: function (date, token, localize) {\n    if (token === 'mo') {\n      return localize.ordinalNumber(date.getUTCMinutes(), {\n        unit: 'minute'\n      });\n    }\n\n    return lightFormatters.m(date, token);\n  },\n  // Second\n  s: function (date, token, localize) {\n    if (token === 'so') {\n      return localize.ordinalNumber(date.getUTCSeconds(), {\n        unit: 'second'\n      });\n    }\n\n    return lightFormatters.s(date, token);\n  },\n  // Fraction of second\n  S: function (date, token) {\n    return lightFormatters.S(date, token);\n  },\n  // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)\n  X: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    if (timezoneOffset === 0) {\n      return 'Z';\n    }\n\n    switch (token) {\n      // Hours and optional minutes\n      case 'X':\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XX`\n\n      case 'XXXX':\n      case 'XX':\n        // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XXX`\n\n      case 'XXXXX':\n      case 'XXX': // Hours and minutes with `:` delimiter\n\n      default:\n        return formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)\n  x: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Hours and optional minutes\n      case 'x':\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xx`\n\n      case 'xxxx':\n      case 'xx':\n        // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xxx`\n\n      case 'xxxxx':\n      case 'xxx': // Hours and minutes with `:` delimiter\n\n      default:\n        return formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (GMT)\n  O: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case 'O':\n      case 'OO':\n      case 'OOO':\n        return 'GMT' + formatTimezoneShort(timezoneOffset, ':');\n      // Long\n\n      case 'OOOO':\n      default:\n        return 'GMT' + formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (specific non-location)\n  z: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case 'z':\n      case 'zz':\n      case 'zzz':\n        return 'GMT' + formatTimezoneShort(timezoneOffset, ':');\n      // Long\n\n      case 'zzzz':\n      default:\n        return 'GMT' + formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Seconds timestamp\n  t: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timestamp = Math.floor(originalDate.getTime() / 1000);\n    return addLeadingZeros(timestamp, token.length);\n  },\n  // Milliseconds timestamp\n  T: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timestamp = originalDate.getTime();\n    return addLeadingZeros(timestamp, token.length);\n  }\n};\n\nfunction formatTimezoneShort(offset, dirtyDelimiter) {\n  var sign = offset > 0 ? '-' : '+';\n  var absOffset = Math.abs(offset);\n  var hours = Math.floor(absOffset / 60);\n  var minutes = absOffset % 60;\n\n  if (minutes === 0) {\n    return sign + String(hours);\n  }\n\n  var delimiter = dirtyDelimiter || '';\n  return sign + String(hours) + delimiter + addLeadingZeros(minutes, 2);\n}\n\nfunction formatTimezoneWithOptionalMinutes(offset, dirtyDelimiter) {\n  if (offset % 60 === 0) {\n    var sign = offset > 0 ? '-' : '+';\n    return sign + addLeadingZeros(Math.abs(offset) / 60, 2);\n  }\n\n  return formatTimezone(offset, dirtyDelimiter);\n}\n\nfunction formatTimezone(offset, dirtyDelimiter) {\n  var delimiter = dirtyDelimiter || '';\n  var sign = offset > 0 ? '-' : '+';\n  var absOffset = Math.abs(offset);\n  var hours = addLeadingZeros(Math.floor(absOffset / 60), 2);\n  var minutes = addLeadingZeros(absOffset % 60, 2);\n  return sign + hours + delimiter + minutes;\n}\n\nexport default formatters;","import toDate from '../../toDate/index.js';\nimport requiredArgs from '../requiredArgs/index.js';\nvar MILLISECONDS_IN_DAY = 86400000; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCDayOfYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var timestamp = date.getTime();\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n  var startOfYearTimestamp = date.getTime();\n  var difference = timestamp - startOfYearTimestamp;\n  return Math.floor(difference / MILLISECONDS_IN_DAY) + 1;\n}","import isValid from '../isValid/index.js';\nimport defaultLocale from '../locale/en-US/index.js';\nimport subMilliseconds from '../subMilliseconds/index.js';\nimport toDate from '../toDate/index.js';\nimport formatters from '../_lib/format/formatters/index.js';\nimport longFormatters from '../_lib/format/longFormatters/index.js';\nimport getTimezoneOffsetInMilliseconds from '../_lib/getTimezoneOffsetInMilliseconds/index.js';\nimport { isProtectedDayOfYearToken, isProtectedWeekYearToken, throwProtectedError } from '../_lib/protectedTokens/index.js';\nimport toInteger from '../_lib/toInteger/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js'; // This RegExp consists of three parts separated by `|`:\n// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token\n//   (one of the certain letters followed by `o`)\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\n\nvar formattingTokensRegExp = /[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g; // This RegExp catches symbols escaped by quotes, and also\n// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`\n\nvar longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;\nvar escapedStringRegExp = /^'([^]*?)'?$/;\nvar doubleQuoteRegExp = /''/g;\nvar unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n/**\n * @name format\n * @category Common Helpers\n * @summary Format the date.\n *\n * @description\n * Return the formatted date string in the given format. The result may vary by locale.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://git.io/fxCyr\n *\n * The characters wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n * (see the last example)\n *\n * Format of the string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 7 below the table).\n *\n * Accepted patterns:\n * | Unit                            | Pattern | Result examples                   | Notes |\n * |---------------------------------|---------|-----------------------------------|-------|\n * | Era                             | G..GGG  | AD, BC                            |       |\n * |                                 | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 | GGGGG   | A, B                              |       |\n * | Calendar year                   | y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | yo      | 44th, 1st, 0th, 17th              | 5,7   |\n * |                                 | yy      | 44, 01, 00, 17                    | 5     |\n * |                                 | yyy     | 044, 001, 1900, 2017              | 5     |\n * |                                 | yyyy    | 0044, 0001, 1900, 2017            | 5     |\n * |                                 | yyyyy   | ...                               | 3,5   |\n * | Local week-numbering year       | Y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | Yo      | 44th, 1st, 1900th, 2017th         | 5,7   |\n * |                                 | YY      | 44, 01, 00, 17                    | 5,8   |\n * |                                 | YYY     | 044, 001, 1900, 2017              | 5     |\n * |                                 | YYYY    | 0044, 0001, 1900, 2017            | 5,8   |\n * |                                 | YYYYY   | ...                               | 3,5   |\n * | ISO week-numbering year         | R       | -43, 0, 1, 1900, 2017             | 5,7   |\n * |                                 | RR      | -43, 00, 01, 1900, 2017           | 5,7   |\n * |                                 | RRR     | -043, 000, 001, 1900, 2017        | 5,7   |\n * |                                 | RRRR    | -0043, 0000, 0001, 1900, 2017     | 5,7   |\n * |                                 | RRRRR   | ...                               | 3,5,7 |\n * | Extended year                   | u       | -43, 0, 1, 1900, 2017             | 5     |\n * |                                 | uu      | -43, 01, 1900, 2017               | 5     |\n * |                                 | uuu     | -043, 001, 1900, 2017             | 5     |\n * |                                 | uuuu    | -0043, 0001, 1900, 2017           | 5     |\n * |                                 | uuuuu   | ...                               | 3,5   |\n * | Quarter (formatting)            | Q       | 1, 2, 3, 4                        |       |\n * |                                 | Qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | QQ      | 01, 02, 03, 04                    |       |\n * |                                 | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | q       | 1, 2, 3, 4                        |       |\n * |                                 | qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | qq      | 01, 02, 03, 04                    |       |\n * |                                 | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | qqqqq   | 1, 2, 3, 4                        | 4     |\n * | Month (formatting)              | M       | 1, 2, ..., 12                     |       |\n * |                                 | Mo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | MM      | 01, 02, ..., 12                   |       |\n * |                                 | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 | MMMM    | January, February, ..., December  | 2     |\n * |                                 | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | L       | 1, 2, ..., 12                     |       |\n * |                                 | Lo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | LL      | 01, 02, ..., 12                   |       |\n * |                                 | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 | LLLL    | January, February, ..., December  | 2     |\n * |                                 | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | w       | 1, 2, ..., 53                     |       |\n * |                                 | wo      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | I       | 1, 2, ..., 53                     | 7     |\n * |                                 | Io      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | II      | 01, 02, ..., 53                   | 7     |\n * | Day of month                    | d       | 1, 2, ..., 31                     |       |\n * |                                 | do      | 1st, 2nd, ..., 31st               | 7     |\n * |                                 | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     | D       | 1, 2, ..., 365, 366               | 9     |\n * |                                 | Do      | 1st, 2nd, ..., 365th, 366th       | 7     |\n * |                                 | DD      | 01, 02, ..., 365, 366             | 9     |\n * |                                 | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 | DDDD    | ...                               | 3     |\n * | Day of week (formatting)        | E..EEE  | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 | EEEEEE  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | ISO day of week (formatting)    | i       | 1, 2, 3, ..., 7                   | 7     |\n * |                                 | io      | 1st, 2nd, ..., 7th                | 7     |\n * |                                 | ii      | 01, 02, ..., 07                   | 7     |\n * |                                 | iii     | Mon, Tue, Wed, ..., Sun           | 7     |\n * |                                 | iiii    | Monday, Tuesday, ..., Sunday      | 2,7   |\n * |                                 | iiiii   | M, T, W, T, F, S, S               | 7     |\n * |                                 | iiiiii  | Mo, Tu, We, Th, Fr, Su, Sa        | 7     |\n * | Local day of week (formatting)  | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 | eo      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | ee      | 02, 03, ..., 01                   |       |\n * |                                 | eee     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 | eeeeee  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | Local day of week (stand-alone) | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 | co      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | cc      | 02, 03, ..., 01                   |       |\n * |                                 | ccc     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 | cccccc  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | AM, PM                          | a..aaa  | AM, PM                            |       |\n * |                                 | aaaa    | a.m., p.m.                        | 2     |\n * |                                 | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          | b..bbb  | AM, PM, noon, midnight            |       |\n * |                                 | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             | B..BBB  | at night, in the morning, ...     |       |\n * |                                 | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 | ho      | 1st, 2nd, ..., 11th, 12th         | 7     |\n * |                                 | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 | Ho      | 0th, 1st, 2nd, ..., 23rd          | 7     |\n * |                                 | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 | Ko      | 1st, 2nd, ..., 11th, 0th          | 7     |\n * |                                 | KK      | 01, 02, ..., 11, 00               |       |\n * | Hour [1-24]                     | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 | ko      | 24th, 1st, 2nd, ..., 23rd         | 7     |\n * |                                 | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          | m       | 0, 1, ..., 59                     |       |\n * |                                 | mo      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | mm      | 00, 01, ..., 59                   |       |\n * | Second                          | s       | 0, 1, ..., 59                     |       |\n * |                                 | so      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | ss      | 00, 01, ..., 59                   |       |\n * | Fraction of second              | S       | 0, 1, ..., 9                      |       |\n * |                                 | SS      | 00, 01, ..., 99                   |       |\n * |                                 | SSS     | 000, 0001, ..., 999               |       |\n * |                                 | SSSS    | ...                               | 3     |\n * | Timezone (ISO-8601 w/ Z)        | X       | -08, +0530, Z                     |       |\n * |                                 | XX      | -0800, +0530, Z                   |       |\n * |                                 | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       | x       | -08, +0530, +00                   |       |\n * |                                 | xx      | -0800, +0530, +0000               |       |\n * |                                 | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Timezone (GMT)                  | O...OOO | GMT-8, GMT+5:30, GMT+0            |       |\n * |                                 | OOOO    | GMT-08:00, GMT+05:30, GMT+00:00   | 2     |\n * | Timezone (specific non-locat.)  | z...zzz | GMT-8, GMT+5:30, GMT+0            | 6     |\n * |                                 | zzzz    | GMT-08:00, GMT+05:30, GMT+00:00   | 2,6   |\n * | Seconds timestamp               | t       | 512969520                         | 7     |\n * |                                 | tt      | ...                               | 3,7   |\n * | Milliseconds timestamp          | T       | 512969520900                      | 7     |\n * |                                 | TT      | ...                               | 3,7   |\n * | Long localized date             | P       | 05/29/1453                        | 7     |\n * |                                 | PP      | May 29, 1453                      | 7     |\n * |                                 | PPP     | May 29th, 1453                    | 7     |\n * |                                 | PPPP    | Sunday, May 29th, 1453            | 2,7   |\n * | Long localized time             | p       | 12:00 AM                          | 7     |\n * |                                 | pp      | 12:00:00 AM                       | 7     |\n * |                                 | ppp     | 12:00:00 AM GMT+2                 | 7     |\n * |                                 | pppp    | 12:00:00 AM GMT+02:00             | 2,7   |\n * | Combination of date and time    | Pp      | 05/29/1453, 12:00 AM              | 7     |\n * |                                 | PPpp    | May 29, 1453, 12:00:00 AM         | 7     |\n * |                                 | PPPppp  | May 29th, 1453 at ...             | 7     |\n * |                                 | PPPPpppp| Sunday, May 29th, 1453 at ...     | 2,7   |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table (e.g. `EEEEEEEEEEE`)\n *    the output will be the same as default pattern for this unit, usually\n *    the longest one (in case of ISO weekdays, `EEEE`). Default patterns for units\n *    are marked with \"2\" in the last column of the table.\n *\n *    `format(new Date(2017, 10, 6), 'MMM') //=> 'Nov'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMM') //=> 'N'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMMM') //=> 'November'`\n *\n * 3. Some patterns could be unlimited length (such as `yyyyyyyy`).\n *    The output will be padded with zeros to match the length of the pattern.\n *\n *    `format(new Date(2017, 10, 6), 'yyyyyyyy') //=> '00002017'`\n *\n * 4. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 5. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` always returns the last two digits of a year,\n *    while `uu` pads single digit years to 2 characters and returns other years unchanged:\n *\n *    | Year | `yy` | `uu` |\n *    |------|------|------|\n *    | 1    |   01 |   01 |\n *    | 14   |   14 |   14 |\n *    | 376  |   76 |  376 |\n *    | 1453 |   53 | 1453 |\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [getISOWeekYear]{@link https://date-fns.org/docs/getISOWeekYear}\n *    and [getWeekYear]{@link https://date-fns.org/docs/getWeekYear}).\n *\n * 6. Specific non-location timezones are currently unavailable in `date-fns`,\n *    so right now these tokens fall back to GMT timezones.\n *\n * 7. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `t`: seconds timestamp\n *    - `T`: milliseconds timestamp\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 8. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://git.io/fxCyr\n *\n * 9. `D` and `DD` tokens represent days of the year but they are ofthen confused with days of the month.\n *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://git.io/fxCyr\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The second argument is now required for the sake of explicitness.\n *\n *   ```javascript\n *   // Before v2.0.0\n *   format(new Date(2016, 0, 1))\n *\n *   // v2.0.0 onward\n *   format(new Date(2016, 0, 1), \"yyyy-MM-dd'T'HH:mm:ss.SSSxxx\")\n *   ```\n *\n * - New format string API for `format` function\n *   which is based on [Unicode Technical Standard #35](https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table).\n *   See [this post](https://blog.date-fns.org/post/unicode-tokens-in-date-fns-v2-sreatyki91jg) for more details.\n *\n * - Characters are now escaped using single quote symbols (`'`) instead of square brackets.\n *\n * @param {Date|Number} date - the original date\n * @param {String} format - the string of tokens\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {Number} [options.firstWeekContainsDate=1] - the day of January, which is\n * @param {Boolean} [options.useAdditionalWeekYearTokens=false] - if true, allows usage of the week-numbering year tokens `YY` and `YYYY`;\n *   see: https://git.io/fxCyr\n * @param {Boolean} [options.useAdditionalDayOfYearTokens=false] - if true, allows usage of the day of year tokens `D` and `DD`;\n *   see: https://git.io/fxCyr\n * @returns {String} the formatted date string\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `options.locale` must contain `localize` property\n * @throws {RangeError} `options.locale` must contain `formatLong` property\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7\n * @throws {RangeError} use `yyyy` instead of `YYYY` for formatting years using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} use `yy` instead of `YY` for formatting years using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} use `d` instead of `D` for formatting days of the month using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} use `dd` instead of `DD` for formatting days of the month using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} format string contains an unescaped latin alphabet character\n *\n * @example\n * // Represent 11 February 2014 in middle-endian format:\n * var result = format(new Date(2014, 1, 11), 'MM/dd/yyyy')\n * //=> '02/11/2014'\n *\n * @example\n * // Represent 2 July 2014 in Esperanto:\n * import { eoLocale } from 'date-fns/locale/eo'\n * var result = format(new Date(2014, 6, 2), \"do 'de' MMMM yyyy\", {\n *   locale: eoLocale\n * })\n * //=> '2-a de julio 2014'\n *\n * @example\n * // Escape string by single quote characters:\n * var result = format(new Date(2014, 6, 2, 15), \"h 'o''clock'\")\n * //=> \"3 o'clock\"\n */\n\nexport default function format(dirtyDate, dirtyFormatStr, dirtyOptions) {\n  requiredArgs(2, arguments);\n  var formatStr = String(dirtyFormatStr);\n  var options = dirtyOptions || {};\n  var locale = options.locale || defaultLocale;\n  var localeFirstWeekContainsDate = locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\n\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');\n  }\n\n  var localeWeekStartsOn = locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  if (!locale.localize) {\n    throw new RangeError('locale must contain localize property');\n  }\n\n  if (!locale.formatLong) {\n    throw new RangeError('locale must contain formatLong property');\n  }\n\n  var originalDate = toDate(dirtyDate);\n\n  if (!isValid(originalDate)) {\n    throw new RangeError('Invalid time value');\n  } // Convert the date in system timezone to the same date in UTC+00:00 timezone.\n  // This ensures that when UTC functions will be implemented, locales will be compatible with them.\n  // See an issue about UTC functions: https://github.com/date-fns/date-fns/issues/376\n\n\n  var timezoneOffset = getTimezoneOffsetInMilliseconds(originalDate);\n  var utcDate = subMilliseconds(originalDate, timezoneOffset);\n  var formatterOptions = {\n    firstWeekContainsDate: firstWeekContainsDate,\n    weekStartsOn: weekStartsOn,\n    locale: locale,\n    _originalDate: originalDate\n  };\n  var result = formatStr.match(longFormattingTokensRegExp).map(function (substring) {\n    var firstCharacter = substring[0];\n\n    if (firstCharacter === 'p' || firstCharacter === 'P') {\n      var longFormatter = longFormatters[firstCharacter];\n      return longFormatter(substring, locale.formatLong, formatterOptions);\n    }\n\n    return substring;\n  }).join('').match(formattingTokensRegExp).map(function (substring) {\n    // Replace two single quote characters with one single quote character\n    if (substring === \"''\") {\n      return \"'\";\n    }\n\n    var firstCharacter = substring[0];\n\n    if (firstCharacter === \"'\") {\n      return cleanEscapedString(substring);\n    }\n\n    var formatter = formatters[firstCharacter];\n\n    if (formatter) {\n      if (!options.useAdditionalWeekYearTokens && isProtectedWeekYearToken(substring)) {\n        throwProtectedError(substring, dirtyFormatStr, dirtyDate);\n      }\n\n      if (!options.useAdditionalDayOfYearTokens && isProtectedDayOfYearToken(substring)) {\n        throwProtectedError(substring, dirtyFormatStr, dirtyDate);\n      }\n\n      return formatter(utcDate, substring, locale.localize, formatterOptions);\n    }\n\n    if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n      throw new RangeError('Format string contains an unescaped latin alphabet character `' + firstCharacter + '`');\n    }\n\n    return substring;\n  }).join('');\n  return result;\n}\n\nfunction cleanEscapedString(input) {\n  return input.match(escapedStringRegExp)[1].replace(doubleQuoteRegExp, \"'\");\n}","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { fade } from '../styles/colorManipulator';\nimport ButtonBase from '../ButtonBase';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({}, theme.typography.button, {\n      boxSizing: 'border-box',\n      minWidth: 64,\n      padding: '6px 16px',\n      borderRadius: theme.shape.borderRadius,\n      color: theme.palette.text.primary,\n      transition: theme.transitions.create(['background-color', 'box-shadow', 'border'], {\n        duration: theme.transitions.duration.short\n      }),\n      '&:hover': {\n        textDecoration: 'none',\n        backgroundColor: fade(theme.palette.text.primary, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        },\n        '&$disabled': {\n          backgroundColor: 'transparent'\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    }),\n\n    /* Styles applied to the span element that wraps the children. */\n    label: {\n      width: '100%',\n      // Ensure the correct width for iOS Safari\n      display: 'inherit',\n      alignItems: 'inherit',\n      justifyContent: 'inherit'\n    },\n\n    /* Styles applied to the root element if `variant=\"text\"`. */\n    text: {\n      padding: '6px 8px'\n    },\n\n    /* Styles applied to the root element if `variant=\"text\"` and `color=\"primary\"`. */\n    textPrimary: {\n      color: theme.palette.primary.main,\n      '&:hover': {\n        backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"text\"` and `color=\"secondary\"`. */\n    textSecondary: {\n      color: theme.palette.secondary.main,\n      '&:hover': {\n        backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"`. */\n    outlined: {\n      padding: '5px 15px',\n      border: \"1px solid \".concat(theme.palette.type === 'light' ? 'rgba(0, 0, 0, 0.23)' : 'rgba(255, 255, 255, 0.23)'),\n      '&$disabled': {\n        border: \"1px solid \".concat(theme.palette.action.disabledBackground)\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"primary\"`. */\n    outlinedPrimary: {\n      color: theme.palette.primary.main,\n      border: \"1px solid \".concat(fade(theme.palette.primary.main, 0.5)),\n      '&:hover': {\n        border: \"1px solid \".concat(theme.palette.primary.main),\n        backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"secondary\"`. */\n    outlinedSecondary: {\n      color: theme.palette.secondary.main,\n      border: \"1px solid \".concat(fade(theme.palette.secondary.main, 0.5)),\n      '&:hover': {\n        border: \"1px solid \".concat(theme.palette.secondary.main),\n        backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      },\n      '&$disabled': {\n        border: \"1px solid \".concat(theme.palette.action.disabled)\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"contained\"`. */\n    contained: {\n      color: theme.palette.getContrastText(theme.palette.grey[300]),\n      backgroundColor: theme.palette.grey[300],\n      boxShadow: theme.shadows[2],\n      '&:hover': {\n        backgroundColor: theme.palette.grey.A100,\n        boxShadow: theme.shadows[4],\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          boxShadow: theme.shadows[2],\n          backgroundColor: theme.palette.grey[300]\n        },\n        '&$disabled': {\n          backgroundColor: theme.palette.action.disabledBackground\n        }\n      },\n      '&$focusVisible': {\n        boxShadow: theme.shadows[6]\n      },\n      '&:active': {\n        boxShadow: theme.shadows[8]\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled,\n        boxShadow: theme.shadows[0],\n        backgroundColor: theme.palette.action.disabledBackground\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"contained\"` and `color=\"primary\"`. */\n    containedPrimary: {\n      color: theme.palette.primary.contrastText,\n      backgroundColor: theme.palette.primary.main,\n      '&:hover': {\n        backgroundColor: theme.palette.primary.dark,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: theme.palette.primary.main\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"contained\"` and `color=\"secondary\"`. */\n    containedSecondary: {\n      color: theme.palette.secondary.contrastText,\n      backgroundColor: theme.palette.secondary.main,\n      '&:hover': {\n        backgroundColor: theme.palette.secondary.dark,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: theme.palette.secondary.main\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `disableElevation={true}`. */\n    disableElevation: {\n      boxShadow: 'none',\n      '&:hover': {\n        boxShadow: 'none'\n      },\n      '&$focusVisible': {\n        boxShadow: 'none'\n      },\n      '&:active': {\n        boxShadow: 'none'\n      },\n      '&$disabled': {\n        boxShadow: 'none'\n      }\n    },\n\n    /* Pseudo-class applied to the ButtonBase root element if the button is keyboard focused. */\n    focusVisible: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit',\n      borderColor: 'currentColor'\n    },\n\n    /* Styles applied to the root element if `size=\"small\"` and `variant=\"text\"`. */\n    textSizeSmall: {\n      padding: '4px 5px',\n      fontSize: theme.typography.pxToRem(13)\n    },\n\n    /* Styles applied to the root element if `size=\"large\"` and `variant=\"text\"`. */\n    textSizeLarge: {\n      padding: '8px 11px',\n      fontSize: theme.typography.pxToRem(15)\n    },\n\n    /* Styles applied to the root element if `size=\"small\"` and `variant=\"outlined\"`. */\n    outlinedSizeSmall: {\n      padding: '3px 9px',\n      fontSize: theme.typography.pxToRem(13)\n    },\n\n    /* Styles applied to the root element if `size=\"large\"` and `variant=\"outlined\"`. */\n    outlinedSizeLarge: {\n      padding: '7px 21px',\n      fontSize: theme.typography.pxToRem(15)\n    },\n\n    /* Styles applied to the root element if `size=\"small\"` and `variant=\"contained\"`. */\n    containedSizeSmall: {\n      padding: '4px 10px',\n      fontSize: theme.typography.pxToRem(13)\n    },\n\n    /* Styles applied to the root element if `size=\"large\"` and `variant=\"contained\"`. */\n    containedSizeLarge: {\n      padding: '8px 22px',\n      fontSize: theme.typography.pxToRem(15)\n    },\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {},\n\n    /* Styles applied to the root element if `size=\"large\"`. */\n    sizeLarge: {},\n\n    /* Styles applied to the root element if `fullWidth={true}`. */\n    fullWidth: {\n      width: '100%'\n    },\n\n    /* Styles applied to the startIcon element if supplied. */\n    startIcon: {\n      display: 'inherit',\n      marginRight: 8,\n      marginLeft: -4,\n      '&$iconSizeSmall': {\n        marginLeft: -2\n      }\n    },\n\n    /* Styles applied to the endIcon element if supplied. */\n    endIcon: {\n      display: 'inherit',\n      marginRight: -4,\n      marginLeft: 8,\n      '&$iconSizeSmall': {\n        marginRight: -2\n      }\n    },\n\n    /* Styles applied to the icon element if supplied and `size=\"small\"`. */\n    iconSizeSmall: {\n      '& > *:first-child': {\n        fontSize: 18\n      }\n    },\n\n    /* Styles applied to the icon element if supplied and `size=\"medium\"`. */\n    iconSizeMedium: {\n      '& > *:first-child': {\n        fontSize: 20\n      }\n    },\n\n    /* Styles applied to the icon element if supplied and `size=\"large\"`. */\n    iconSizeLarge: {\n      '& > *:first-child': {\n        fontSize: 22\n      }\n    }\n  };\n};\nvar Button = /*#__PURE__*/React.forwardRef(function Button(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'default' : _props$color,\n      _props$component = props.component,\n      component = _props$component === void 0 ? 'button' : _props$component,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$disableElevati = props.disableElevation,\n      disableElevation = _props$disableElevati === void 0 ? false : _props$disableElevati,\n      _props$disableFocusRi = props.disableFocusRipple,\n      disableFocusRipple = _props$disableFocusRi === void 0 ? false : _props$disableFocusRi,\n      endIconProp = props.endIcon,\n      focusVisibleClassName = props.focusVisibleClassName,\n      _props$fullWidth = props.fullWidth,\n      fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      startIconProp = props.startIcon,\n      _props$type = props.type,\n      type = _props$type === void 0 ? 'button' : _props$type,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'text' : _props$variant,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"color\", \"component\", \"disabled\", \"disableElevation\", \"disableFocusRipple\", \"endIcon\", \"focusVisibleClassName\", \"fullWidth\", \"size\", \"startIcon\", \"type\", \"variant\"]);\n\n  var startIcon = startIconProp && /*#__PURE__*/React.createElement(\"span\", {\n    className: clsx(classes.startIcon, classes[\"iconSize\".concat(capitalize(size))])\n  }, startIconProp);\n  var endIcon = endIconProp && /*#__PURE__*/React.createElement(\"span\", {\n    className: clsx(classes.endIcon, classes[\"iconSize\".concat(capitalize(size))])\n  }, endIconProp);\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    className: clsx(classes.root, classes[variant], className, color === 'inherit' ? classes.colorInherit : color !== 'default' && classes[\"\".concat(variant).concat(capitalize(color))], size !== 'medium' && [classes[\"\".concat(variant, \"Size\").concat(capitalize(size))], classes[\"size\".concat(capitalize(size))]], disableElevation && classes.disableElevation, disabled && classes.disabled, fullWidth && classes.fullWidth),\n    component: component,\n    disabled: disabled,\n    focusRipple: !disableFocusRipple,\n    focusVisibleClassName: clsx(classes.focusVisible, focusVisibleClassName),\n    ref: ref,\n    type: type\n  }, other), /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.label\n  }, startIcon, children, endIcon));\n});\nprocess.env.NODE_ENV !== \"production\" ? Button.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the button.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'inherit', 'primary', 'secondary']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, the button will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, no elevation is used.\n   */\n  disableElevation: PropTypes.bool,\n\n  /**\n   * If `true`, the  keyboard focus ripple will be disabled.\n   */\n  disableFocusRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   *\n   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure\n   * to highlight the element by applying separate styles with the `focusVisibleClassName`.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * Element placed after the children.\n   */\n  endIcon: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  focusVisibleClassName: PropTypes.string,\n\n  /**\n   * If `true`, the button will take up the full width of its container.\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * The URL to link to when the button is clicked.\n   * If defined, an `a` element will be used as the root node.\n   */\n  href: PropTypes.string,\n\n  /**\n   * The size of the button.\n   * `small` is equivalent to the dense button styling.\n   */\n  size: PropTypes.oneOf(['large', 'medium', 'small']),\n\n  /**\n   * Element placed before the children.\n   */\n  startIcon: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  type: PropTypes.oneOfType([PropTypes.oneOf(['button', 'reset', 'submit']), PropTypes.string]),\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['contained', 'outlined', 'text'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiButton'\n})(Button);","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm4 11h-3v3c0 .55-.45 1-1 1s-1-.45-1-1v-3H8c-.55 0-1-.45-1-1s.45-1 1-1h3V8c0-.55.45-1 1-1s1 .45 1 1v3h3c.55 0 1 .45 1 1s-.45 1-1 1z\"\n}), 'AddCircleRounded');\n\nexports.default = _default;","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { setDescOfConsign } from '../../actions/tradeDeal';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport { green } from '@material-ui/core/colors';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport clsx from 'clsx';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport AddCircleRoundedIcon from '@material-ui/icons/AddCircleRounded';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    alignItems: 'center',\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n      width: '50ch',\r\n    },\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  wrapper: {\r\n    margin: theme.spacing(1),\r\n    position: 'relative',\r\n  },\r\n  buttonSuccess: {\r\n    backgroundColor: green[500],\r\n    '&:hover': {\r\n      backgroundColor: green[700],\r\n    },\r\n  },\r\n  fabProgress: {\r\n    color: green[500],\r\n    position: 'absolute',\r\n    top: -6,\r\n    left: -6,\r\n    zIndex: 1,\r\n  },\r\n  buttonProgress: {\r\n    color: green[500],\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    marginTop: -12,\r\n    marginLeft: -12,\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n}));\r\n\r\nconst TradeForm4 = ({ history, setDescOfConsign, tradeDeal }) => {\r\n  const classes = useStyles();\r\n  const [pid, setPID] = useState('');\r\n  const [fxRate, setFxRate] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [sellPrice, setSellPrice] = useState('');\r\n  const [tax, setTax] = useState(0);\r\n  const [itemPrice, setItemPrice] = useState(0);\r\n  const [unitsPk, setUnitsPk] = useState('');\r\n  const [qty, setQty] = useState(0);\r\n  const [amount, setAmount] = useState('');\r\n  const [products, setProducts] = useState([]);\r\n  const [totalAmount, setTotalAmount] = useState('');\r\n  const [totalNetWt, setTotalNetWt] = useState('');\r\n  const [currDisc, setCurrDisc] = useState('');\r\n  const [totalCube, setTotalCube] = useState('');\r\n  const [totalGross, setTotalGross] = useState('');\r\n  const [success, setSuccess] = React.useState(false);\r\n  const [loading, setLoading] = React.useState(false);\r\n  const [err, setErr] = useState(false);\r\n  const [flag, setFlag] = useState(true);\r\n  const timer = React.useRef();\r\n  const buttonClassname = clsx({\r\n    [classes.buttonSuccess]: success,\r\n  });\r\n\r\n  const handleButtonClick = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!loading) {\r\n      nextForm();\r\n      setSuccess(false);\r\n      setLoading(true);\r\n      timer.current = window.setTimeout(() => {\r\n        setSuccess(true);\r\n        setLoading(false);\r\n      }, 2000);\r\n    }\r\n    localStorage.setItem('flag', flag);\r\n  };\r\n  useEffect(() => {\r\n    const { descriptionOfConsignmentInfo } = tradeDeal;\r\n    if (descriptionOfConsignmentInfo) {\r\n      setPID(descriptionOfConsignmentInfo.pid);\r\n      setFxRate(descriptionOfConsignmentInfo.fxRate);\r\n      setDescription(descriptionOfConsignmentInfo.description);\r\n      setSellPrice(descriptionOfConsignmentInfo.sellPrice);\r\n      setTax(descriptionOfConsignmentInfo.tax);\r\n      setItemPrice(descriptionOfConsignmentInfo.itemPrice);\r\n      setUnitsPk(descriptionOfConsignmentInfo.unitsPk);\r\n      setQty(descriptionOfConsignmentInfo.qty);\r\n      setAmount(descriptionOfConsignmentInfo.amount);\r\n      setProducts(descriptionOfConsignmentInfo.products);\r\n      setTotalAmount(descriptionOfConsignmentInfo.totalAmount);\r\n      setTotalNetWt(descriptionOfConsignmentInfo.totalNetWt);\r\n      setCurrDisc(descriptionOfConsignmentInfo.currDisc);\r\n      setTotalCube(descriptionOfConsignmentInfo.totalCube);\r\n      setTotalGross(descriptionOfConsignmentInfo.totalGross);\r\n    }\r\n  }, []);\r\n\r\n  const product = {\r\n    pid,\r\n    fxRate,\r\n    description,\r\n    sellPrice,\r\n    tax,\r\n    itemPrice,\r\n    unitsPk,\r\n    qty,\r\n    amount,\r\n  };\r\n\r\n  const addProduct = (e) => {\r\n    e.preventDefault();\r\n    setProducts([...products, product]);\r\n    setPID('');\r\n    setAmount('');\r\n    setQty(0);\r\n    setDescription('');\r\n    setUnitsPk('');\r\n    setSellPrice('');\r\n    setTax(0);\r\n    setFxRate('');\r\n    setItemPrice(0);\r\n  };\r\n\r\n  const nextForm = () => {\r\n    setProducts([...products, product]);\r\n    const descOfConsign = {\r\n      products,\r\n      totalAmount,\r\n      totalCube,\r\n      totalGross,\r\n      totalNetWt,\r\n      currDisc,\r\n    };\r\n    console.log(descOfConsign);\r\n    setDescOfConsign(descOfConsign);\r\n    //history.push('/tradeform5');\r\n  };\r\n  return (\r\n    <div\r\n      className={classes.root}\r\n      style={{\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n      }}\r\n    >\r\n      <Container maxWidth='sm'>\r\n        <h3 style={{ alignItems: 'center', fontSize: '2vw' }}>\r\n          Logistics Details\r\n        </h3>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              id='pid'\r\n              label='Product ID'\r\n              type='text'\r\n              variant='outlined'\r\n              value={pid}\r\n              onChange={(e) => {\r\n                setPID(e.target.value);\r\n              }}\r\n              style={{ width: '100%' }}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              id='fxRate'\r\n              label='Fix Rate'\r\n              type='text'\r\n              variant='outlined'\r\n              value={fxRate}\r\n              onChange={(e) => {\r\n                setFxRate(e.target.value);\r\n              }}\r\n              style={{ width: '100%' }}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              id='description'\r\n              label='Description(Package)'\r\n              type='text'\r\n              variant='outlined'\r\n              value={description}\r\n              onChange={(e) => {\r\n                setDescription(e.target.value);\r\n              }}\r\n              style={{ width: '100%' }}\r\n              multiline\r\n              rows={3}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              id='sellPrice'\r\n              label='sellPrice'\r\n              type='text'\r\n              variant='outlined'\r\n              value={sellPrice}\r\n              onChange={(e) => {\r\n                setSellPrice(e.target.value);\r\n              }}\r\n              style={{ width: '100%' }}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              id='tax'\r\n              label='TAX %'\r\n              type='number'\r\n              variant='outlined'\r\n              value={tax}\r\n              onChange={(e) => {\r\n                setTax(e.target.value);\r\n              }}\r\n              style={{ width: '100%' }}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              id='itemPrice'\r\n              label='Item Price'\r\n              type='number'\r\n              variant='outlined'\r\n              value={itemPrice}\r\n              onChange={(e) => {\r\n                setItemPrice(e.target.value);\r\n              }}\r\n              style={{ width: '100%' }}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              id='unitsPk'\r\n              label='Units in PK'\r\n              type='text'\r\n              variant='outlined'\r\n              value={unitsPk}\r\n              onChange={(e) => {\r\n                setUnitsPk(e.target.value);\r\n              }}\r\n              style={{ width: '100%' }}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              id='qty'\r\n              label='Quantity'\r\n              type='number'\r\n              variant='outlined'\r\n              value={qty}\r\n              onChange={(e) => {\r\n                setQty(e.target.value);\r\n              }}\r\n              style={{ width: '100%' }}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              id='amount'\r\n              label='Amount'\r\n              type='text'\r\n              variant='outlined'\r\n              value={amount}\r\n              onChange={(e) => {\r\n                setAmount(e.target.value);\r\n              }}\r\n              style={{ width: '100%' }}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Button\r\n              style={{\r\n                maxWidth: '14rem',\r\n                maxHeight: '3rem',\r\n                minWidth: '14rem',\r\n                minHeight: '3rem',\r\n              }}\r\n              variant='contained'\r\n              color='primary'\r\n              className={classes.button}\r\n              endIcon={<AddCircleRoundedIcon></AddCircleRoundedIcon>}\r\n              onClick={addProduct}\r\n              style={{ width: '100%' }}\r\n            >\r\n              ADD\r\n            </Button>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              id='totalAmount'\r\n              label='Total Amount'\r\n              type='text'\r\n              variant='outlined'\r\n              value={totalAmount}\r\n              onChange={(e) => {\r\n                setTotalAmount(e.target.value);\r\n              }}\r\n              style={{ width: '100%' }}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              id='currDisc'\r\n              label='Current Discount'\r\n              type='text'\r\n              variant='outlined'\r\n              value={currDisc}\r\n              onChange={(e) => {\r\n                setCurrDisc(e.target.value);\r\n              }}\r\n              style={{ width: '100%' }}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              id='totalNetWt'\r\n              label='Total Net Wt.'\r\n              type='text'\r\n              variant='outlined'\r\n              value={totalNetWt}\r\n              onChange={(e) => {\r\n                setTotalNetWt(e.target.value);\r\n              }}\r\n              style={{ width: '100%' }}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              id='totalCube'\r\n              label='Total Cube'\r\n              type='text'\r\n              variant='outlined'\r\n              value={totalCube}\r\n              onChange={(e) => {\r\n                setTotalCube(e.target.value);\r\n              }}\r\n              style={{ width: '100%' }}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              id='totalGross'\r\n              label='Total Gross'\r\n              type='text'\r\n              variant='outlined'\r\n              value={totalGross}\r\n              onChange={(e) => {\r\n                setTotalGross(e.target.value);\r\n              }}\r\n              style={{ width: '100%' }}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <div\r\n              style={{\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                justifyContent: 'center',\r\n              }}\r\n            >\r\n              <div className={classes.wrapper}>\r\n                <Fab\r\n                  aria-label='save'\r\n                  color='primary'\r\n                  className={buttonClassname}\r\n                  onClick={handleButtonClick}\r\n                  //disabled={flag}\r\n                >\r\n                  {success ? <CheckIcon /> : <SaveIcon />}\r\n                </Fab>\r\n                {loading && (\r\n                  <CircularProgress size={68} className={classes.fabProgress} />\r\n                )}\r\n              </div>\r\n            </div>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  setDescOfConsign: (descOfConsign) =>\r\n    dispatch(setDescOfConsign(descOfConsign)),\r\n});\r\n\r\nconst mapStateToProps = (state) => ({\r\n  tradeDeal: state.tradeDeal,\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TradeForm4);\r\n"],"sourceRoot":""}